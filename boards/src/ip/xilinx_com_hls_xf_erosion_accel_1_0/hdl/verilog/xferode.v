// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xferode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_V_dout,
        p_src_data_V_empty_n,
        p_src_data_V_read,
        p_dst_data_V_din,
        p_dst_data_V_full_n,
        p_dst_data_V_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_pp0_stage0 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_pp1_stage0 = 10'd256;
parameter    ap_ST_fsm_state22 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_V_dout;
input   p_src_data_V_empty_n;
output   p_src_data_V_read;
output  [7:0] p_dst_data_V_din;
input   p_dst_data_V_full_n;
output   p_dst_data_V_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_V_read;
reg p_dst_data_V_write;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] tmp_4_reg_1737;
reg   [0:0] tmp_10_reg_1746;
reg   [0:0] tmp_9_reg_1708;
reg    p_dst_data_V_blk_n;
reg    ap_enable_reg_pp1_iter11;
reg   [0:0] icmp_reg_1780;
reg   [0:0] icmp_reg_1780_pp1_iter10_reg;
reg   [16:0] rd_ind_1_reg_432;
reg   [12:0] t_V_reg_442;
reg   [12:0] t_V_5_reg_542;
reg   [12:0] t_V_5_reg_542_pp1_iter1_reg;
wire    ap_block_state10_pp1_stage0_iter0;
reg    ap_predicate_op183_read_state11;
reg    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
wire    ap_block_state14_pp1_stage0_iter4;
wire    ap_block_state15_pp1_stage0_iter5;
wire    ap_block_state16_pp1_stage0_iter6;
wire    ap_block_state17_pp1_stage0_iter7;
wire    ap_block_state18_pp1_stage0_iter8;
wire    ap_block_state19_pp1_stage0_iter9;
wire    ap_block_state20_pp1_stage0_iter10;
reg    ap_block_state21_pp1_stage0_iter11;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] src_buf_4_reg_554;
reg   [7:0] src_buf_3_3_reg_566;
reg   [7:0] src_buf_3_3_reg_566_pp1_iter4_reg;
reg   [7:0] src_buf_3_3_reg_566_pp1_iter5_reg;
reg   [7:0] src_buf_3_3_reg_566_pp1_iter6_reg;
reg   [7:0] src_buf_3_3_reg_566_pp1_iter7_reg;
reg   [7:0] src_buf_3_2_reg_578;
reg   [7:0] src_buf_3_2_reg_578_pp1_iter4_reg;
reg   [7:0] src_buf_3_2_reg_578_pp1_iter5_reg;
reg   [7:0] src_buf_3_2_reg_578_pp1_iter6_reg;
reg   [7:0] src_buf_3_2_reg_578_pp1_iter7_reg;
reg   [7:0] src_buf_3_1_reg_591;
reg   [7:0] src_buf_3_1_reg_591_pp1_iter4_reg;
reg   [7:0] src_buf_3_1_reg_591_pp1_iter5_reg;
reg   [7:0] src_buf_3_1_reg_591_pp1_iter6_reg;
reg   [7:0] src_buf_3_1_reg_591_pp1_iter7_reg;
reg   [7:0] src_buf_3_reg_604;
reg   [7:0] src_buf_2_3_reg_617;
reg   [7:0] src_buf_2_3_reg_617_pp1_iter4_reg;
reg   [7:0] src_buf_2_3_reg_617_pp1_iter5_reg;
reg   [7:0] src_buf_2_3_reg_617_pp1_iter6_reg;
reg   [7:0] src_buf_2_2_reg_629;
reg   [7:0] src_buf_2_2_reg_629_pp1_iter4_reg;
reg   [7:0] src_buf_2_2_reg_629_pp1_iter5_reg;
reg   [7:0] src_buf_2_1_reg_642;
reg   [7:0] src_buf_2_1_reg_642_pp1_iter4_reg;
reg   [7:0] src_buf_2_1_reg_642_pp1_iter5_reg;
reg   [7:0] src_buf_2_1_reg_642_pp1_iter6_reg;
reg   [7:0] src_buf_2_reg_655;
reg   [7:0] src_buf_1_3_reg_668;
reg   [7:0] src_buf_1_3_reg_668_pp1_iter4_reg;
reg   [7:0] src_buf_1_2_reg_680;
reg   [7:0] src_buf_1_2_reg_680_pp1_iter4_reg;
reg   [7:0] src_buf_1_1_reg_693;
reg   [7:0] src_buf_1_1_reg_693_pp1_iter4_reg;
reg   [7:0] src_buf_1_reg_706;
reg   [7:0] src_buf_0_3_reg_719;
reg   [7:0] src_buf_0_2_reg_731;
reg   [7:0] src_buf_0_1_reg_744;
reg   [7:0] src_buf_reg_757;
reg   [7:0] src_buf_4_1_reg_769;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter4_reg;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter5_reg;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter6_reg;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter7_reg;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter8_reg;
reg   [7:0] src_buf_4_1_reg_769_pp1_iter9_reg;
reg   [7:0] src_buf_4_2_reg_782;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter4_reg;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter5_reg;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter6_reg;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter7_reg;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter8_reg;
reg   [7:0] src_buf_4_2_reg_782_pp1_iter9_reg;
reg   [7:0] src_buf_4_3_reg_795;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter4_reg;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter5_reg;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter6_reg;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter7_reg;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter8_reg;
reg   [7:0] src_buf_4_3_reg_795_pp1_iter9_reg;
reg   [12:0] row_ind_4_V_load_reg_1582;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_4_V_1_load_reg_1587;
reg   [12:0] row_ind_4_V_2_load_reg_1592;
reg   [12:0] row_ind_4_V_3_load_reg_1597;
reg   [12:0] row_ind_4_V_4_load_reg_1602;
wire   [2:0] init_row_ind_fu_854_p2;
wire   [17:0] op_assign_cast7_fu_889_p1;
reg   [17:0] op_assign_cast7_reg_1615;
wire   [0:0] exitcond1_fu_848_p2;
wire   [16:0] op_assign_cast_fu_892_p1;
reg   [16:0] op_assign_cast_reg_1621;
wire   [0:0] exitcond2_fu_895_p2;
wire    ap_CS_fsm_state3;
wire   [16:0] tmp_fu_901_p2;
reg   [16:0] tmp_reg_1631;
wire   [0:0] cond_fu_906_p2;
reg   [0:0] cond_reg_1636;
wire   [0:0] exitcond3_fu_916_p2;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] i_col_V_fu_922_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [10:0] buf_2_V_addr_reg_1649;
reg   [10:0] buf_3_V_addr_reg_1654;
wire   [16:0] rd_ind_2_fu_934_p2;
wire   [2:0] i_row_V_fu_940_p2;
wire    ap_CS_fsm_state6;
wire   [17:0] indvars_iv_next_fu_946_p2;
wire   [1:0] i_row_V_1_fu_957_p2;
reg   [1:0] i_row_V_1_reg_1677;
wire    ap_CS_fsm_state7;
wire   [0:0] cond1_fu_963_p2;
reg   [0:0] cond1_reg_1682;
wire   [0:0] exitcond_fu_951_p2;
wire   [16:0] op2_assign_fu_972_p2;
reg   [16:0] op2_assign_reg_1686;
wire   [16:0] op2_assign_1_fu_978_p2;
reg   [16:0] op2_assign_1_reg_1691;
wire   [12:0] i_col_V_1_fu_992_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_8_fu_1012_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_9_fu_1017_p2;
wire   [2:0] tmp_13_fu_1022_p1;
reg   [2:0] tmp_13_reg_1712;
wire   [2:0] tmp_17_fu_1026_p1;
reg   [2:0] tmp_17_reg_1717;
wire   [2:0] tmp_18_fu_1030_p1;
reg   [2:0] tmp_18_reg_1722;
wire   [2:0] tmp_19_fu_1034_p1;
reg   [2:0] tmp_19_reg_1727;
wire   [2:0] tmp_20_fu_1038_p1;
reg   [2:0] tmp_20_reg_1732;
wire   [0:0] tmp_4_fu_1050_p2;
reg   [0:0] tmp_4_reg_1737_pp1_iter1_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter2_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter3_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter4_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter5_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter6_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter7_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter8_reg;
reg   [0:0] tmp_4_reg_1737_pp1_iter9_reg;
wire   [12:0] col_V_fu_1055_p2;
reg   [12:0] col_V_reg_1741;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_10_fu_1061_p2;
reg   [0:0] tmp_10_reg_1746_pp1_iter1_reg;
reg   [0:0] tmp_10_reg_1746_pp1_iter2_reg;
wire   [0:0] icmp_fu_1099_p2;
reg   [0:0] icmp_reg_1780_pp1_iter3_reg;
reg   [0:0] icmp_reg_1780_pp1_iter4_reg;
reg   [0:0] icmp_reg_1780_pp1_iter5_reg;
reg   [0:0] icmp_reg_1780_pp1_iter6_reg;
reg   [0:0] icmp_reg_1780_pp1_iter7_reg;
reg   [0:0] icmp_reg_1780_pp1_iter8_reg;
reg   [0:0] icmp_reg_1780_pp1_iter9_reg;
wire   [7:0] src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return;
reg   [7:0] src_buf_temp_copy_ex_reg_1784;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return;
reg   [7:0] src_buf_temp_copy_ex_1_reg_1791;
reg   [7:0] src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg;
wire   [7:0] src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return;
reg   [7:0] src_buf_temp_copy_ex_2_reg_1798;
reg   [7:0] src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg;
reg   [7:0] src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg;
reg   [7:0] src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg;
wire   [7:0] src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg;
reg   [7:0] src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg;
wire   [7:0] src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg;
reg   [7:0] src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg;
wire   [7:0] src_buf_load_0_0_3_s_fu_1254_p3;
reg   [7:0] src_buf_load_0_0_3_s_reg_1819;
wire   [7:0] src_buf_load_0_1_1_s_fu_1292_p3;
reg   [7:0] src_buf_load_0_1_1_s_reg_1825;
wire   [7:0] src_buf_load_0_1_4_s_fu_1331_p3;
reg   [7:0] src_buf_load_0_1_4_s_reg_1831;
wire   [7:0] src_buf_load_0_2_2_s_fu_1370_p3;
reg   [7:0] src_buf_load_0_2_2_s_reg_1837;
wire   [7:0] src_buf_load_0_3_0_s_fu_1408_p3;
reg   [7:0] src_buf_load_0_3_0_s_reg_1843;
wire   [7:0] src_buf_load_0_3_3_s_fu_1448_p3;
reg   [7:0] src_buf_load_0_3_3_s_reg_1849;
wire   [7:0] src_buf_load_0_4_1_s_fu_1486_p3;
reg   [7:0] src_buf_load_0_4_1_s_reg_1855;
wire   [7:0] sel_SEBB_fu_1525_p3;
reg   [7:0] sel_SEBB_reg_1861;
wire   [12:0] row_V_fu_1532_p2;
wire    ap_CS_fsm_state22;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter3_state13;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire   [10:0] buf_3_V_address0;
reg    buf_3_V_ce0;
wire   [7:0] buf_3_V_q0;
reg   [10:0] buf_3_V_address1;
reg    buf_3_V_ce1;
reg    buf_3_V_we1;
reg   [7:0] buf_3_V_d1;
wire   [10:0] buf_4_V_address0;
reg    buf_4_V_ce0;
wire   [7:0] buf_4_V_q0;
reg   [10:0] buf_4_V_address1;
reg    buf_4_V_ce1;
reg    buf_4_V_we1;
reg   [7:0] buf_4_V_d1;
wire    src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_ready;
wire   [7:0] src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read;
wire    src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_ready;
wire   [7:0] src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read;
wire    src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_ready;
wire   [7:0] src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read;
wire    src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_ready;
wire   [7:0] src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read;
wire    src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_ready;
wire   [7:0] src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read;
wire   [2:0] ap_phi_mux_val_assign_phi_fu_391_p4;
reg   [2:0] val_assign_reg_387;
reg   [17:0] indvars_iv_reg_398;
reg   [16:0] rd_ind_reg_408;
reg   [2:0] t_V_1_reg_420;
reg   [1:0] t_V_3_reg_453;
wire   [0:0] tmp_2_fu_987_p2;
reg   [12:0] t_V_2_reg_464;
reg   [12:0] row_ind_3_V_1_reg_475;
reg   [12:0] zero_ind_V_reg_518;
reg   [12:0] row_ind_2_V_reg_485;
reg   [12:0] row_ind_1_V_reg_496;
reg   [12:0] row_ind_0_V_reg_507;
reg   [12:0] t_V_4_reg_530;
reg   [12:0] ap_phi_mux_t_V_5_phi_fu_546_p4;
reg   [7:0] ap_phi_mux_src_buf_4_phi_fu_558_p4;
reg   [7:0] ap_phi_mux_src_buf_3_phi_fu_608_p4;
reg   [7:0] ap_phi_mux_src_buf_2_phi_fu_659_p4;
reg   [7:0] ap_phi_mux_src_buf_1_phi_fu_710_p4;
reg   [7:0] ap_phi_mux_src_buf_0_3_phi_fu_723_p4;
reg   [7:0] ap_phi_mux_src_buf_0_2_phi_fu_735_p4;
reg   [7:0] ap_phi_mux_src_buf_0_1_phi_fu_748_p4;
reg   [7:0] ap_phi_mux_src_buf_phi_fu_761_p4;
wire   [63:0] tmp_3_fu_928_p1;
wire   [63:0] tmp_1_fu_998_p1;
wire   [63:0] tmp_11_fu_1066_p1;
wire   [10:0] buf_0_V_addr_1_gep_fu_314_p3;
wire   [10:0] buf_1_V_addr_1_gep_fu_320_p3;
wire   [10:0] buf_2_V_addr_1_gep_fu_326_p3;
wire   [10:0] buf_3_V_addr_1_gep_fu_332_p3;
wire   [10:0] buf_4_V_addr_gep_fu_338_p3;
wire   [63:0] tmp_12_fu_1080_p1;
reg    ap_block_pp1_stage0_01001;
reg   [12:0] row_ind_4_V_fu_136;
wire   [12:0] row_ind_0_V_2_fu_860_p1;
reg   [12:0] row_ind_4_V_1_fu_140;
reg   [12:0] row_ind_4_V_2_fu_144;
reg   [12:0] row_ind_4_V_3_fu_148;
reg   [12:0] row_ind_4_V_4_fu_152;
wire   [17:0] rd_ind_1_cast_cast_fu_912_p1;
wire   [16:0] tmp_1_cast3_fu_969_p1;
wire   [15:0] tmp_cast_fu_983_p1;
wire   [16:0] tmp_5_cast_fu_1008_p1;
wire   [15:0] tmp_5_cast2_fu_1004_p1;
wire   [16:0] tmp_12_cast_fu_1046_p1;
wire   [15:0] tmp_12_cast1_fu_1042_p1;
wire   [11:0] tmp_21_fu_1089_p4;
wire   [7:0] buf_cop_0_V_fu_1105_p7;
wire   [7:0] tmp_14_fu_1120_p7;
wire   [7:0] buf_cop_2_V_fu_1151_p7;
wire   [7:0] tmp_15_fu_1166_p7;
wire   [7:0] tmp_16_fu_1197_p7;
wire   [0:0] tmp_49_0_0_1_fu_1220_p2;
wire   [7:0] src_buf_load_0_0_1_s_fu_1226_p3;
wire   [0:0] tmp_49_0_0_2_fu_1234_p2;
wire   [7:0] sel_SEBB1_fu_1240_p3;
wire   [0:0] tmp_49_0_0_3_fu_1248_p2;
wire   [0:0] tmp_49_0_0_4_fu_1262_p2;
wire   [7:0] src_buf_load_0_0_4_s_fu_1266_p3;
wire   [0:0] tmp_49_0_1_fu_1272_p2;
wire   [7:0] sel_SEBB2_fu_1278_p3;
wire   [0:0] tmp_49_0_1_1_fu_1286_p2;
wire   [0:0] tmp_49_0_1_2_fu_1300_p2;
wire   [7:0] src_buf_load_0_1_2_s_fu_1305_p3;
wire   [0:0] tmp_49_0_1_3_fu_1312_p2;
wire   [7:0] sel_SEBB3_fu_1318_p3;
wire   [0:0] tmp_49_0_1_4_fu_1326_p2;
wire   [0:0] tmp_49_0_2_fu_1338_p2;
wire   [7:0] src_buf_load_0_2_0_s_fu_1343_p3;
wire   [0:0] tmp_49_0_2_1_fu_1350_p2;
wire   [7:0] sel_SEBB4_fu_1356_p3;
wire   [0:0] tmp_49_0_2_2_fu_1364_p2;
wire   [0:0] tmp_49_0_2_3_fu_1378_p2;
wire   [7:0] src_buf_load_0_2_3_s_fu_1383_p3;
wire   [0:0] tmp_49_0_2_4_fu_1390_p2;
wire   [7:0] sel_SEBB5_fu_1395_p3;
wire   [0:0] tmp_49_0_3_fu_1402_p2;
wire   [0:0] tmp_49_0_3_1_fu_1416_p2;
wire   [7:0] src_buf_load_0_3_1_s_fu_1421_p3;
wire   [0:0] tmp_49_0_3_2_fu_1428_p2;
wire   [7:0] sel_SEBB6_fu_1434_p3;
wire   [0:0] tmp_49_0_3_3_fu_1442_p2;
wire   [0:0] tmp_49_0_3_4_fu_1456_p2;
wire   [7:0] src_buf_load_0_3_4_s_fu_1460_p3;
wire   [0:0] tmp_49_0_4_fu_1466_p2;
wire   [7:0] sel_SEBB7_fu_1472_p3;
wire   [0:0] tmp_49_0_4_1_fu_1480_p2;
wire   [0:0] tmp_49_0_4_2_fu_1494_p2;
wire   [7:0] src_buf_load_0_4_2_s_fu_1499_p3;
wire   [0:0] tmp_49_0_4_3_fu_1506_p2;
wire   [7:0] sel_SEBB8_fu_1512_p3;
wire   [0:0] tmp_49_0_4_4_fu_1520_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1268;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
end

xferode_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xferode_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

xferode_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

xferode_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_3_V_address0),
    .ce0(buf_3_V_ce0),
    .q0(buf_3_V_q0),
    .address1(buf_3_V_address1),
    .ce1(buf_3_V_ce1),
    .we1(buf_3_V_we1),
    .d1(buf_3_V_d1)
);

xferode_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_4_V_address0),
    .ce0(buf_4_V_ce0),
    .q0(buf_4_V_q0),
    .address1(buf_4_V_address1),
    .ce1(buf_4_V_ce1),
    .we1(buf_4_V_we1),
    .d1(buf_4_V_d1)
);

xfExtractPixels src_buf_temp_copy_ex_xfExtractPixels_fu_808(
    .ap_ready(src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_ready),
    .val1_V_read(src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read),
    .ap_return(src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return)
);

xfExtractPixels src_buf_temp_copy_ex_1_xfExtractPixels_fu_813(
    .ap_ready(src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_ready),
    .val1_V_read(src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read),
    .ap_return(src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return)
);

xfExtractPixels src_buf_temp_copy_ex_2_xfExtractPixels_fu_818(
    .ap_ready(src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_ready),
    .val1_V_read(src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read),
    .ap_return(src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return)
);

xfExtractPixels src_buf_temp_copy_ex_3_xfExtractPixels_fu_823(
    .ap_ready(src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_ready),
    .val1_V_read(src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read),
    .ap_return(src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return)
);

xfExtractPixels src_buf_temp_copy_ex_4_xfExtractPixels_fu_828(
    .ap_ready(src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_ready),
    .val1_V_read(src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read),
    .ap_return(src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return)
);

xf_erosion_accel_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
xf_erosion_accel_bkb_U20(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(tmp_17_reg_1717),
    .dout(buf_cop_0_V_fu_1105_p7)
);

xf_erosion_accel_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
xf_erosion_accel_bkb_U21(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(tmp_18_reg_1722),
    .dout(tmp_14_fu_1120_p7)
);

xf_erosion_accel_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
xf_erosion_accel_bkb_U22(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(tmp_19_reg_1727),
    .dout(buf_cop_2_V_fu_1151_p7)
);

xf_erosion_accel_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
xf_erosion_accel_bkb_U23(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(tmp_20_reg_1732),
    .dout(tmp_15_fu_1166_p7)
);

xf_erosion_accel_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
xf_erosion_accel_bkb_U24(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(buf_3_V_q0),
    .din4(buf_4_V_q0),
    .din5(tmp_13_reg_1712),
    .dout(tmp_16_fu_1197_p7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond2_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((exitcond2_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((tmp_4_fu_1050_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter3_state13)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvars_iv_reg_398 <= op_assign_cast7_fu_889_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvars_iv_reg_398 <= indvars_iv_next_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_916_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        rd_ind_1_reg_432 <= rd_ind_2_fu_934_p2;
    end else if (((exitcond2_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        rd_ind_1_reg_432 <= rd_ind_reg_408;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rd_ind_reg_408 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rd_ind_reg_408 <= tmp_reg_1631;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        row_ind_0_V_reg_507 <= row_ind_1_V_reg_496;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_0_V_reg_507 <= row_ind_4_V_1_load_reg_1587;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        row_ind_1_V_reg_496 <= row_ind_2_V_reg_485;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_1_V_reg_496 <= row_ind_4_V_2_load_reg_1592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        row_ind_2_V_reg_485 <= row_ind_3_V_1_reg_475;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_2_V_reg_485 <= row_ind_4_V_3_load_reg_1597;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        row_ind_3_V_1_reg_475 <= zero_ind_V_reg_518;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_3_V_1_reg_475 <= row_ind_4_V_4_load_reg_1602;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_0_1_reg_744 <= src_buf_0_2_reg_731;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_0_1_reg_744 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_0_2_reg_731 <= src_buf_0_3_reg_719;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_0_2_reg_731 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_0_3_reg_719 <= src_buf_temp_copy_ex_reg_1784;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_0_3_reg_719 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_1_reg_693 <= src_buf_1_2_reg_680;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_1_reg_693 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_2_reg_680 <= src_buf_1_3_reg_668;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_2_reg_680 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_3_reg_668 <= src_buf_temp_copy_ex_1_reg_1791;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_3_reg_668 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_reg_706 <= src_buf_1_1_reg_693_pp1_iter4_reg;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_reg_706 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_1_reg_642 <= src_buf_2_2_reg_629;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_1_reg_642 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_2_reg_629 <= src_buf_2_3_reg_617;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_2_reg_629 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_3_reg_617 <= src_buf_temp_copy_ex_2_reg_1798;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_3_reg_617 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter6_reg == 1'd1) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_reg_655 <= src_buf_2_1_reg_642_pp1_iter6_reg;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_reg_655 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_3_1_reg_591 <= src_buf_3_2_reg_578;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_3_1_reg_591 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_3_2_reg_578 <= src_buf_3_3_reg_566;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_3_2_reg_578 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_3_3_reg_566 <= src_buf_temp_copy_ex_3_reg_1805;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_3_3_reg_566 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter7_reg == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_3_reg_604 <= src_buf_3_1_reg_591_pp1_iter7_reg;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_3_reg_604 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_4_1_reg_769 <= src_buf_4_2_reg_782;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_4_1_reg_769 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_4_2_reg_782 <= src_buf_4_3_reg_795;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_4_2_reg_782 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_4_3_reg_795 <= src_buf_temp_copy_ex_4_reg_1812;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_4_3_reg_795 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter9_reg == 1'd1) & (ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_4_reg_554 <= src_buf_4_1_reg_769_pp1_iter9_reg;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_4_reg_554 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_reg_757 <= src_buf_0_1_reg_744;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_reg_757 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_1_reg_420 <= 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_1_reg_420 <= i_row_V_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_987_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        t_V_2_reg_464 <= i_col_V_1_fu_992_p2;
    end else if (((exitcond_fu_951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_2_reg_464 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_3_reg_453 <= 2'd0;
    end else if (((tmp_2_fu_987_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        t_V_3_reg_453 <= i_row_V_1_reg_1677;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        t_V_4_reg_530 <= row_V_fu_1532_p2;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        t_V_4_reg_530 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        t_V_5_reg_542 <= col_V_reg_1741;
    end else if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        t_V_5_reg_542 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_916_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        t_V_reg_442 <= i_col_V_fu_922_p2;
    end else if (((exitcond2_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_reg_442 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        val_assign_reg_387 <= init_row_ind_fu_854_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        val_assign_reg_387 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        zero_ind_V_reg_518 <= row_ind_0_V_reg_507;
    end else if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        zero_ind_V_reg_518 <= row_ind_4_V_load_reg_1582;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_916_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_V_addr_reg_1649 <= tmp_3_fu_928_p1;
        buf_3_V_addr_reg_1654 <= tmp_3_fu_928_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_V_reg_1741 <= col_V_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        cond1_reg_1682 <= cond1_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        cond_reg_1636 <= cond_fu_906_p2;
        tmp_reg_1631 <= tmp_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_row_V_1_reg_1677 <= i_row_V_1_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_reg_1780 <= icmp_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_reg_1780_pp1_iter10_reg <= icmp_reg_1780_pp1_iter9_reg;
        icmp_reg_1780_pp1_iter3_reg <= icmp_reg_1780;
        icmp_reg_1780_pp1_iter4_reg <= icmp_reg_1780_pp1_iter3_reg;
        icmp_reg_1780_pp1_iter5_reg <= icmp_reg_1780_pp1_iter4_reg;
        icmp_reg_1780_pp1_iter6_reg <= icmp_reg_1780_pp1_iter5_reg;
        icmp_reg_1780_pp1_iter7_reg <= icmp_reg_1780_pp1_iter6_reg;
        icmp_reg_1780_pp1_iter8_reg <= icmp_reg_1780_pp1_iter7_reg;
        icmp_reg_1780_pp1_iter9_reg <= icmp_reg_1780_pp1_iter8_reg;
        src_buf_1_1_reg_693_pp1_iter4_reg <= src_buf_1_1_reg_693;
        src_buf_1_2_reg_680_pp1_iter4_reg <= src_buf_1_2_reg_680;
        src_buf_1_3_reg_668_pp1_iter4_reg <= src_buf_1_3_reg_668;
        src_buf_2_1_reg_642_pp1_iter4_reg <= src_buf_2_1_reg_642;
        src_buf_2_1_reg_642_pp1_iter5_reg <= src_buf_2_1_reg_642_pp1_iter4_reg;
        src_buf_2_1_reg_642_pp1_iter6_reg <= src_buf_2_1_reg_642_pp1_iter5_reg;
        src_buf_2_2_reg_629_pp1_iter4_reg <= src_buf_2_2_reg_629;
        src_buf_2_2_reg_629_pp1_iter5_reg <= src_buf_2_2_reg_629_pp1_iter4_reg;
        src_buf_2_3_reg_617_pp1_iter4_reg <= src_buf_2_3_reg_617;
        src_buf_2_3_reg_617_pp1_iter5_reg <= src_buf_2_3_reg_617_pp1_iter4_reg;
        src_buf_2_3_reg_617_pp1_iter6_reg <= src_buf_2_3_reg_617_pp1_iter5_reg;
        src_buf_3_1_reg_591_pp1_iter4_reg <= src_buf_3_1_reg_591;
        src_buf_3_1_reg_591_pp1_iter5_reg <= src_buf_3_1_reg_591_pp1_iter4_reg;
        src_buf_3_1_reg_591_pp1_iter6_reg <= src_buf_3_1_reg_591_pp1_iter5_reg;
        src_buf_3_1_reg_591_pp1_iter7_reg <= src_buf_3_1_reg_591_pp1_iter6_reg;
        src_buf_3_2_reg_578_pp1_iter4_reg <= src_buf_3_2_reg_578;
        src_buf_3_2_reg_578_pp1_iter5_reg <= src_buf_3_2_reg_578_pp1_iter4_reg;
        src_buf_3_2_reg_578_pp1_iter6_reg <= src_buf_3_2_reg_578_pp1_iter5_reg;
        src_buf_3_2_reg_578_pp1_iter7_reg <= src_buf_3_2_reg_578_pp1_iter6_reg;
        src_buf_3_3_reg_566_pp1_iter4_reg <= src_buf_3_3_reg_566;
        src_buf_3_3_reg_566_pp1_iter5_reg <= src_buf_3_3_reg_566_pp1_iter4_reg;
        src_buf_3_3_reg_566_pp1_iter6_reg <= src_buf_3_3_reg_566_pp1_iter5_reg;
        src_buf_3_3_reg_566_pp1_iter7_reg <= src_buf_3_3_reg_566_pp1_iter6_reg;
        src_buf_4_1_reg_769_pp1_iter4_reg <= src_buf_4_1_reg_769;
        src_buf_4_1_reg_769_pp1_iter5_reg <= src_buf_4_1_reg_769_pp1_iter4_reg;
        src_buf_4_1_reg_769_pp1_iter6_reg <= src_buf_4_1_reg_769_pp1_iter5_reg;
        src_buf_4_1_reg_769_pp1_iter7_reg <= src_buf_4_1_reg_769_pp1_iter6_reg;
        src_buf_4_1_reg_769_pp1_iter8_reg <= src_buf_4_1_reg_769_pp1_iter7_reg;
        src_buf_4_1_reg_769_pp1_iter9_reg <= src_buf_4_1_reg_769_pp1_iter8_reg;
        src_buf_4_2_reg_782_pp1_iter4_reg <= src_buf_4_2_reg_782;
        src_buf_4_2_reg_782_pp1_iter5_reg <= src_buf_4_2_reg_782_pp1_iter4_reg;
        src_buf_4_2_reg_782_pp1_iter6_reg <= src_buf_4_2_reg_782_pp1_iter5_reg;
        src_buf_4_2_reg_782_pp1_iter7_reg <= src_buf_4_2_reg_782_pp1_iter6_reg;
        src_buf_4_2_reg_782_pp1_iter8_reg <= src_buf_4_2_reg_782_pp1_iter7_reg;
        src_buf_4_2_reg_782_pp1_iter9_reg <= src_buf_4_2_reg_782_pp1_iter8_reg;
        src_buf_4_3_reg_795_pp1_iter4_reg <= src_buf_4_3_reg_795;
        src_buf_4_3_reg_795_pp1_iter5_reg <= src_buf_4_3_reg_795_pp1_iter4_reg;
        src_buf_4_3_reg_795_pp1_iter6_reg <= src_buf_4_3_reg_795_pp1_iter5_reg;
        src_buf_4_3_reg_795_pp1_iter7_reg <= src_buf_4_3_reg_795_pp1_iter6_reg;
        src_buf_4_3_reg_795_pp1_iter8_reg <= src_buf_4_3_reg_795_pp1_iter7_reg;
        src_buf_4_3_reg_795_pp1_iter9_reg <= src_buf_4_3_reg_795_pp1_iter8_reg;
        src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg <= src_buf_temp_copy_ex_1_reg_1791;
        src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg <= src_buf_temp_copy_ex_2_reg_1798;
        src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg <= src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg;
        src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg <= src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg;
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg <= src_buf_temp_copy_ex_3_reg_1805;
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg;
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg;
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg;
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg <= src_buf_temp_copy_ex_4_reg_1812;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg;
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg;
        tmp_10_reg_1746_pp1_iter2_reg <= tmp_10_reg_1746_pp1_iter1_reg;
        tmp_4_reg_1737_pp1_iter2_reg <= tmp_4_reg_1737_pp1_iter1_reg;
        tmp_4_reg_1737_pp1_iter3_reg <= tmp_4_reg_1737_pp1_iter2_reg;
        tmp_4_reg_1737_pp1_iter4_reg <= tmp_4_reg_1737_pp1_iter3_reg;
        tmp_4_reg_1737_pp1_iter5_reg <= tmp_4_reg_1737_pp1_iter4_reg;
        tmp_4_reg_1737_pp1_iter6_reg <= tmp_4_reg_1737_pp1_iter5_reg;
        tmp_4_reg_1737_pp1_iter7_reg <= tmp_4_reg_1737_pp1_iter6_reg;
        tmp_4_reg_1737_pp1_iter8_reg <= tmp_4_reg_1737_pp1_iter7_reg;
        tmp_4_reg_1737_pp1_iter9_reg <= tmp_4_reg_1737_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        op2_assign_1_reg_1691 <= op2_assign_1_fu_978_p2;
        op2_assign_reg_1686 <= op2_assign_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        op_assign_cast7_reg_1615[15 : 0] <= op_assign_cast7_fu_889_p1[15 : 0];
        op_assign_cast_reg_1621[15 : 0] <= op_assign_cast_fu_892_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_4_V_1_fu_140[2 : 0] <= row_ind_0_V_2_fu_860_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_4_V_1_load_reg_1587[2 : 0] <= row_ind_4_V_1_fu_140[2 : 0];
        row_ind_4_V_2_load_reg_1592[2 : 0] <= row_ind_4_V_2_fu_144[2 : 0];
        row_ind_4_V_3_load_reg_1597[2 : 0] <= row_ind_4_V_3_fu_148[2 : 0];
        row_ind_4_V_4_load_reg_1602[2 : 0] <= row_ind_4_V_4_fu_152[2 : 0];
        row_ind_4_V_load_reg_1582[2 : 0] <= row_ind_4_V_fu_136[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_4_V_2_fu_144[2 : 0] <= row_ind_0_V_2_fu_860_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd3) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_4_V_3_fu_148[2 : 0] <= row_ind_0_V_2_fu_860_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd3) & ~(ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd2) & ~(ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd1) & ~(ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd0) & (exitcond1_fu_848_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_4_V_4_fu_152[2 : 0] <= row_ind_0_V_2_fu_860_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_848_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_391_p4 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_4_V_fu_136[2 : 0] <= row_ind_0_V_2_fu_860_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter9_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sel_SEBB_reg_1861 <= sel_SEBB_fu_1525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter2_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_0_3_s_reg_1819 <= src_buf_load_0_0_3_s_fu_1254_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_1_1_s_reg_1825 <= src_buf_load_0_1_1_s_fu_1292_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter4_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_1_4_s_reg_1831 <= src_buf_load_0_1_4_s_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter5_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_2_2_s_reg_1837 <= src_buf_load_0_2_2_s_fu_1370_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter6_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_3_0_s_reg_1843 <= src_buf_load_0_3_0_s_fu_1408_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter7_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_3_3_s_reg_1849 <= src_buf_load_0_3_3_s_fu_1448_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter8_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_load_0_4_1_s_reg_1855 <= src_buf_load_0_4_1_s_fu_1486_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_1737_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_temp_copy_ex_1_reg_1791 <= src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return;
        src_buf_temp_copy_ex_2_reg_1798 <= src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return;
        src_buf_temp_copy_ex_3_reg_1805 <= src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return;
        src_buf_temp_copy_ex_4_reg_1812 <= src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return;
        src_buf_temp_copy_ex_reg_1784 <= src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        t_V_5_reg_542_pp1_iter1_reg <= t_V_5_reg_542;
        tmp_10_reg_1746_pp1_iter1_reg <= tmp_10_reg_1746;
        tmp_4_reg_1737 <= tmp_4_fu_1050_p2;
        tmp_4_reg_1737_pp1_iter1_reg <= tmp_4_reg_1737;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_fu_1050_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_10_reg_1746 <= tmp_10_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_13_reg_1712 <= tmp_13_fu_1022_p1;
        tmp_17_reg_1717 <= tmp_17_fu_1026_p1;
        tmp_18_reg_1722 <= tmp_18_fu_1030_p1;
        tmp_19_reg_1727 <= tmp_19_fu_1034_p1;
        tmp_20_reg_1732 <= tmp_20_fu_1038_p1;
        tmp_9_reg_1708 <= tmp_9_fu_1017_p2;
    end
end

always @ (*) begin
    if ((exitcond3_fu_916_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_8_fu_1012_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_0_1_phi_fu_748_p4 = src_buf_0_2_reg_731;
    end else begin
        ap_phi_mux_src_buf_0_1_phi_fu_748_p4 = src_buf_0_1_reg_744;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_0_2_phi_fu_735_p4 = src_buf_0_3_reg_719;
    end else begin
        ap_phi_mux_src_buf_0_2_phi_fu_735_p4 = src_buf_0_2_reg_731;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_0_3_phi_fu_723_p4 = src_buf_temp_copy_ex_reg_1784;
    end else begin
        ap_phi_mux_src_buf_0_3_phi_fu_723_p4 = src_buf_0_3_reg_719;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter4_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_src_buf_1_phi_fu_710_p4 = src_buf_1_1_reg_693_pp1_iter4_reg;
    end else begin
        ap_phi_mux_src_buf_1_phi_fu_710_p4 = src_buf_1_reg_706;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter6_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        ap_phi_mux_src_buf_2_phi_fu_659_p4 = src_buf_2_1_reg_642_pp1_iter6_reg;
    end else begin
        ap_phi_mux_src_buf_2_phi_fu_659_p4 = src_buf_2_reg_655;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter7_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
        ap_phi_mux_src_buf_3_phi_fu_608_p4 = src_buf_3_1_reg_591_pp1_iter7_reg;
    end else begin
        ap_phi_mux_src_buf_3_phi_fu_608_p4 = src_buf_3_reg_604;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter9_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        ap_phi_mux_src_buf_4_phi_fu_558_p4 = src_buf_4_1_reg_769_pp1_iter9_reg;
    end else begin
        ap_phi_mux_src_buf_4_phi_fu_558_p4 = src_buf_4_reg_554;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_phi_fu_761_p4 = src_buf_0_1_reg_744;
    end else begin
        ap_phi_mux_src_buf_phi_fu_761_p4 = src_buf_reg_757;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_t_V_5_phi_fu_546_p4 = col_V_reg_1741;
    end else begin
        ap_phi_mux_t_V_5_phi_fu_546_p4 = t_V_5_reg_542;
    end
end

always @ (*) begin
    if (((tmp_8_fu_1012_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = buf_0_V_addr_1_gep_fu_314_p3;
    end else if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = tmp_11_fu_1066_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        buf_0_V_address1 = tmp_1_fu_998_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_d1 = p_src_data_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_0_V_d1 = 8'd255;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_2_fu_987_p2 == 1'd1) & (cond1_reg_1682 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = buf_1_V_addr_1_gep_fu_320_p3;
    end else if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = tmp_11_fu_1066_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        buf_1_V_address1 = tmp_1_fu_998_p1;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_d1 = p_src_data_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_1_V_d1 = 8'd255;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((cond1_reg_1682 == 1'd0) & (tmp_2_fu_987_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2_V_address1 = buf_2_V_addr_1_gep_fu_326_p3;
    end else if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2_V_address1 = tmp_11_fu_1066_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_V_address1 = buf_2_V_addr_reg_1649;
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2_V_d1 = 8'd255;
    end else if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_V_d1 = p_src_data_V_dout;
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((cond_reg_1636 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_3_V_address1 = buf_3_V_addr_1_gep_fu_332_p3;
    end else if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_3_V_address1 = tmp_11_fu_1066_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_3_V_address1 = buf_3_V_addr_reg_1654;
    end else begin
        buf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_3_V_ce0 = 1'b1;
    end else begin
        buf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_3_V_ce1 = 1'b1;
    end else begin
        buf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_3_V_d1 = 8'd255;
    end else if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_3_V_d1 = p_src_data_V_dout;
    end else begin
        buf_3_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (tmp_13_reg_1712 == 3'd3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((cond_reg_1636 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_3_V_we1 = 1'b1;
    end else begin
        buf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1268)) begin
        if ((tmp_9_reg_1708 == 1'd1)) begin
            buf_4_V_address1 = buf_4_V_addr_gep_fu_338_p3;
        end else if ((tmp_9_reg_1708 == 1'd0)) begin
            buf_4_V_address1 = tmp_11_fu_1066_p1;
        end else begin
            buf_4_V_address1 = 'bx;
        end
    end else begin
        buf_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_4_V_ce0 = 1'b1;
    end else begin
        buf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(tmp_13_reg_1712 == 3'd0) & ~(tmp_13_reg_1712 == 3'd1) & ~(tmp_13_reg_1712 == 3'd2) & ~(tmp_13_reg_1712 == 3'd3) & (tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(tmp_13_reg_1712 == 3'd0) & ~(tmp_13_reg_1712 == 3'd1) & ~(tmp_13_reg_1712 == 3'd2) & ~(tmp_13_reg_1712 == 3'd3) & (tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_4_V_ce1 = 1'b1;
    end else begin
        buf_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1268)) begin
        if ((tmp_9_reg_1708 == 1'd1)) begin
            buf_4_V_d1 = p_src_data_V_dout;
        end else if ((tmp_9_reg_1708 == 1'd0)) begin
            buf_4_V_d1 = 8'd255;
        end else begin
            buf_4_V_d1 = 'bx;
        end
    end else begin
        buf_4_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(tmp_13_reg_1712 == 3'd0) & ~(tmp_13_reg_1712 == 3'd1) & ~(tmp_13_reg_1712 == 3'd2) & ~(tmp_13_reg_1712 == 3'd3) & (tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(tmp_13_reg_1712 == 3'd0) & ~(tmp_13_reg_1712 == 3'd1) & ~(tmp_13_reg_1712 == 3'd2) & ~(tmp_13_reg_1712 == 3'd3) & (tmp_9_reg_1708 == 1'd0) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_4_V_we1 = 1'b1;
    end else begin
        buf_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        p_dst_data_V_blk_n = p_dst_data_V_full_n;
    end else begin
        p_dst_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_dst_data_V_write = 1'b1;
    end else begin
        p_dst_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_V_blk_n = p_src_data_V_empty_n;
    end else begin
        p_src_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op183_read_state11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_V_read = 1'b1;
    end else begin
        p_src_data_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_848_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond2_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond3_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond3_fu_916_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_2_fu_987_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((tmp_8_fu_1012_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)) & ~((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((p_src_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((p_src_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (p_dst_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((p_src_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op183_read_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (p_dst_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((p_src_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op183_read_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (p_dst_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((p_src_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op183_read_state11 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter1 = ((p_src_data_V_empty_n == 1'b0) & (ap_predicate_op183_read_state11 == 1'b1));
end

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp1_stage0_iter11 = ((icmp_reg_1780_pp1_iter10_reg == 1'd0) & (p_dst_data_V_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (p_src_data_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_condition_1268 = (~(tmp_13_reg_1712 == 3'd0) & ~(tmp_13_reg_1712 == 3'd1) & ~(tmp_13_reg_1712 == 3'd2) & ~(tmp_13_reg_1712 == 3'd3) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_val_assign_phi_fu_391_p4 = val_assign_reg_387;

always @ (*) begin
    ap_predicate_op183_read_state11 = ((tmp_9_reg_1708 == 1'd1) & (tmp_10_reg_1746 == 1'd1) & (tmp_4_reg_1737 == 1'd1));
end

assign buf_0_V_addr_1_gep_fu_314_p3 = tmp_11_fu_1066_p1;

assign buf_0_V_address0 = tmp_12_fu_1080_p1;

assign buf_1_V_addr_1_gep_fu_320_p3 = tmp_11_fu_1066_p1;

assign buf_1_V_address0 = tmp_12_fu_1080_p1;

assign buf_2_V_addr_1_gep_fu_326_p3 = tmp_11_fu_1066_p1;

assign buf_2_V_address0 = tmp_12_fu_1080_p1;

assign buf_3_V_addr_1_gep_fu_332_p3 = tmp_11_fu_1066_p1;

assign buf_3_V_address0 = tmp_12_fu_1080_p1;

assign buf_4_V_addr_gep_fu_338_p3 = tmp_11_fu_1066_p1;

assign buf_4_V_address0 = tmp_12_fu_1080_p1;

assign col_V_fu_1055_p2 = (ap_phi_mux_t_V_5_phi_fu_546_p4 + 13'd1);

assign cond1_fu_963_p2 = ((t_V_3_reg_453 == 2'd0) ? 1'b1 : 1'b0);

assign cond_fu_906_p2 = ((t_V_1_reg_420 == 3'd2) ? 1'b1 : 1'b0);

assign exitcond1_fu_848_p2 = ((val_assign_reg_387 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond2_fu_895_p2 = ((t_V_1_reg_420 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond3_fu_916_p2 = ((rd_ind_1_cast_cast_fu_912_p1 == indvars_iv_reg_398) ? 1'b1 : 1'b0);

assign exitcond_fu_951_p2 = ((t_V_3_reg_453 == 2'd2) ? 1'b1 : 1'b0);

assign i_col_V_1_fu_992_p2 = (t_V_2_reg_464 + 13'd1);

assign i_col_V_fu_922_p2 = (t_V_reg_442 + 13'd1);

assign i_row_V_1_fu_957_p2 = (t_V_3_reg_453 + 2'd1);

assign i_row_V_fu_940_p2 = (t_V_1_reg_420 + 3'd1);

assign icmp_fu_1099_p2 = ((tmp_21_fu_1089_p4 == 12'd0) ? 1'b1 : 1'b0);

assign indvars_iv_next_fu_946_p2 = (op_assign_cast7_reg_1615 + indvars_iv_reg_398);

assign init_row_ind_fu_854_p2 = (val_assign_reg_387 + 3'd1);

assign op2_assign_1_fu_978_p2 = (op_assign_cast_reg_1621 + 17'd2);

assign op2_assign_fu_972_p2 = (tmp_1_cast3_fu_969_p1 + 17'd2);

assign op_assign_cast7_fu_889_p1 = img_width;

assign op_assign_cast_fu_892_p1 = img_width;

assign p_dst_data_V_din = sel_SEBB_reg_1861;

assign rd_ind_1_cast_cast_fu_912_p1 = rd_ind_1_reg_432;

assign rd_ind_2_fu_934_p2 = (rd_ind_1_reg_432 + 17'd1);

assign row_V_fu_1532_p2 = (t_V_4_reg_530 + 13'd1);

assign row_ind_0_V_2_fu_860_p1 = val_assign_reg_387;

assign sel_SEBB1_fu_1240_p3 = ((tmp_49_0_0_2_fu_1234_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_0_2_phi_fu_735_p4 : src_buf_load_0_0_1_s_fu_1226_p3);

assign sel_SEBB2_fu_1278_p3 = ((tmp_49_0_1_fu_1272_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_1_phi_fu_710_p4 : src_buf_load_0_0_4_s_fu_1266_p3);

assign sel_SEBB3_fu_1318_p3 = ((tmp_49_0_1_3_fu_1312_p2[0:0] === 1'b1) ? src_buf_1_3_reg_668_pp1_iter4_reg : src_buf_load_0_1_2_s_fu_1305_p3);

assign sel_SEBB4_fu_1356_p3 = ((tmp_49_0_2_1_fu_1350_p2[0:0] === 1'b1) ? src_buf_2_1_reg_642_pp1_iter5_reg : src_buf_load_0_2_0_s_fu_1343_p3);

assign sel_SEBB5_fu_1395_p3 = ((tmp_49_0_2_4_fu_1390_p2[0:0] === 1'b1) ? src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg : src_buf_load_0_2_3_s_fu_1383_p3);

assign sel_SEBB6_fu_1434_p3 = ((tmp_49_0_3_2_fu_1428_p2[0:0] === 1'b1) ? src_buf_3_2_reg_578_pp1_iter7_reg : src_buf_load_0_3_1_s_fu_1421_p3);

assign sel_SEBB7_fu_1472_p3 = ((tmp_49_0_4_fu_1466_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_4_phi_fu_558_p4 : src_buf_load_0_3_4_s_fu_1460_p3);

assign sel_SEBB8_fu_1512_p3 = ((tmp_49_0_4_3_fu_1506_p2[0:0] === 1'b1) ? src_buf_4_3_reg_795_pp1_iter9_reg : src_buf_load_0_4_2_s_fu_1499_p3);

assign sel_SEBB_fu_1525_p3 = ((tmp_49_0_4_4_fu_1520_p2[0:0] === 1'b1) ? src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg : sel_SEBB8_fu_1512_p3);

assign src_buf_load_0_0_1_s_fu_1226_p3 = ((tmp_49_0_0_1_fu_1220_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_0_1_phi_fu_748_p4 : ap_phi_mux_src_buf_phi_fu_761_p4);

assign src_buf_load_0_0_3_s_fu_1254_p3 = ((tmp_49_0_0_3_fu_1248_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_0_3_phi_fu_723_p4 : sel_SEBB1_fu_1240_p3);

assign src_buf_load_0_0_4_s_fu_1266_p3 = ((tmp_49_0_0_4_fu_1262_p2[0:0] === 1'b1) ? src_buf_temp_copy_ex_reg_1784 : src_buf_load_0_0_3_s_reg_1819);

assign src_buf_load_0_1_1_s_fu_1292_p3 = ((tmp_49_0_1_1_fu_1286_p2[0:0] === 1'b1) ? src_buf_1_1_reg_693 : sel_SEBB2_fu_1278_p3);

assign src_buf_load_0_1_2_s_fu_1305_p3 = ((tmp_49_0_1_2_fu_1300_p2[0:0] === 1'b1) ? src_buf_1_2_reg_680_pp1_iter4_reg : src_buf_load_0_1_1_s_reg_1825);

assign src_buf_load_0_1_4_s_fu_1331_p3 = ((tmp_49_0_1_4_fu_1326_p2[0:0] === 1'b1) ? src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg : sel_SEBB3_fu_1318_p3);

assign src_buf_load_0_2_0_s_fu_1343_p3 = ((tmp_49_0_2_fu_1338_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_2_phi_fu_659_p4 : src_buf_load_0_1_4_s_reg_1831);

assign src_buf_load_0_2_2_s_fu_1370_p3 = ((tmp_49_0_2_2_fu_1364_p2[0:0] === 1'b1) ? src_buf_2_2_reg_629_pp1_iter5_reg : sel_SEBB4_fu_1356_p3);

assign src_buf_load_0_2_3_s_fu_1383_p3 = ((tmp_49_0_2_3_fu_1378_p2[0:0] === 1'b1) ? src_buf_2_3_reg_617_pp1_iter6_reg : src_buf_load_0_2_2_s_reg_1837);

assign src_buf_load_0_3_0_s_fu_1408_p3 = ((tmp_49_0_3_fu_1402_p2[0:0] === 1'b1) ? ap_phi_mux_src_buf_3_phi_fu_608_p4 : sel_SEBB5_fu_1395_p3);

assign src_buf_load_0_3_1_s_fu_1421_p3 = ((tmp_49_0_3_1_fu_1416_p2[0:0] === 1'b1) ? src_buf_3_1_reg_591_pp1_iter7_reg : src_buf_load_0_3_0_s_reg_1843);

assign src_buf_load_0_3_3_s_fu_1448_p3 = ((tmp_49_0_3_3_fu_1442_p2[0:0] === 1'b1) ? src_buf_3_3_reg_566_pp1_iter7_reg : sel_SEBB6_fu_1434_p3);

assign src_buf_load_0_3_4_s_fu_1460_p3 = ((tmp_49_0_3_4_fu_1456_p2[0:0] === 1'b1) ? src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg : src_buf_load_0_3_3_s_reg_1849);

assign src_buf_load_0_4_1_s_fu_1486_p3 = ((tmp_49_0_4_1_fu_1480_p2[0:0] === 1'b1) ? src_buf_4_1_reg_769_pp1_iter8_reg : sel_SEBB7_fu_1472_p3);

assign src_buf_load_0_4_2_s_fu_1499_p3 = ((tmp_49_0_4_2_fu_1494_p2[0:0] === 1'b1) ? src_buf_4_2_reg_782_pp1_iter9_reg : src_buf_load_0_4_1_s_reg_1855);

assign src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read = ((tmp_10_reg_1746_pp1_iter2_reg[0:0] === 1'b1) ? tmp_14_fu_1120_p7 : 8'd255);

assign src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read = ((tmp_10_reg_1746_pp1_iter2_reg[0:0] === 1'b1) ? buf_cop_2_V_fu_1151_p7 : 8'd255);

assign src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read = ((tmp_10_reg_1746_pp1_iter2_reg[0:0] === 1'b1) ? tmp_15_fu_1166_p7 : 8'd255);

assign src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read = ((tmp_10_reg_1746_pp1_iter2_reg[0:0] === 1'b1) ? tmp_16_fu_1197_p7 : 8'd255);

assign src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read = ((tmp_10_reg_1746_pp1_iter2_reg[0:0] === 1'b1) ? buf_cop_0_V_fu_1105_p7 : 8'd255);

assign tmp_10_fu_1061_p2 = ((tmp_12_cast1_fu_1042_p1 < img_width) ? 1'b1 : 1'b0);

assign tmp_11_fu_1066_p1 = t_V_5_reg_542;

assign tmp_12_cast1_fu_1042_p1 = ap_phi_mux_t_V_5_phi_fu_546_p4;

assign tmp_12_cast_fu_1046_p1 = ap_phi_mux_t_V_5_phi_fu_546_p4;

assign tmp_12_fu_1080_p1 = t_V_5_reg_542_pp1_iter1_reg;

assign tmp_13_fu_1022_p1 = row_ind_3_V_1_reg_475[2:0];

assign tmp_17_fu_1026_p1 = zero_ind_V_reg_518[2:0];

assign tmp_18_fu_1030_p1 = row_ind_0_V_reg_507[2:0];

assign tmp_19_fu_1034_p1 = row_ind_1_V_reg_496[2:0];

assign tmp_1_cast3_fu_969_p1 = img_height;

assign tmp_1_fu_998_p1 = t_V_2_reg_464;

assign tmp_20_fu_1038_p1 = row_ind_2_V_reg_485[2:0];

assign tmp_21_fu_1089_p4 = {{t_V_5_reg_542_pp1_iter1_reg[12:1]}};

assign tmp_2_fu_987_p2 = ((tmp_cast_fu_983_p1 < img_width) ? 1'b1 : 1'b0);

assign tmp_3_fu_928_p1 = t_V_reg_442;

assign tmp_49_0_0_1_fu_1220_p2 = ((ap_phi_mux_src_buf_0_1_phi_fu_748_p4 < ap_phi_mux_src_buf_phi_fu_761_p4) ? 1'b1 : 1'b0);

assign tmp_49_0_0_2_fu_1234_p2 = ((ap_phi_mux_src_buf_0_2_phi_fu_735_p4 < src_buf_load_0_0_1_s_fu_1226_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_0_3_fu_1248_p2 = ((ap_phi_mux_src_buf_0_3_phi_fu_723_p4 < sel_SEBB1_fu_1240_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_0_4_fu_1262_p2 = ((src_buf_temp_copy_ex_reg_1784 < src_buf_load_0_0_3_s_reg_1819) ? 1'b1 : 1'b0);

assign tmp_49_0_1_1_fu_1286_p2 = ((src_buf_1_1_reg_693 < sel_SEBB2_fu_1278_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_1_2_fu_1300_p2 = ((src_buf_1_2_reg_680_pp1_iter4_reg < src_buf_load_0_1_1_s_reg_1825) ? 1'b1 : 1'b0);

assign tmp_49_0_1_3_fu_1312_p2 = ((src_buf_1_3_reg_668_pp1_iter4_reg < src_buf_load_0_1_2_s_fu_1305_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_1_4_fu_1326_p2 = ((src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg < sel_SEBB3_fu_1318_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_1_fu_1272_p2 = ((ap_phi_mux_src_buf_1_phi_fu_710_p4 < src_buf_load_0_0_4_s_fu_1266_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_2_1_fu_1350_p2 = ((src_buf_2_1_reg_642_pp1_iter5_reg < src_buf_load_0_2_0_s_fu_1343_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_2_2_fu_1364_p2 = ((src_buf_2_2_reg_629_pp1_iter5_reg < sel_SEBB4_fu_1356_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_2_3_fu_1378_p2 = ((src_buf_2_3_reg_617_pp1_iter6_reg < src_buf_load_0_2_2_s_reg_1837) ? 1'b1 : 1'b0);

assign tmp_49_0_2_4_fu_1390_p2 = ((src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg < src_buf_load_0_2_3_s_fu_1383_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_2_fu_1338_p2 = ((ap_phi_mux_src_buf_2_phi_fu_659_p4 < src_buf_load_0_1_4_s_reg_1831) ? 1'b1 : 1'b0);

assign tmp_49_0_3_1_fu_1416_p2 = ((src_buf_3_1_reg_591_pp1_iter7_reg < src_buf_load_0_3_0_s_reg_1843) ? 1'b1 : 1'b0);

assign tmp_49_0_3_2_fu_1428_p2 = ((src_buf_3_2_reg_578_pp1_iter7_reg < src_buf_load_0_3_1_s_fu_1421_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_3_3_fu_1442_p2 = ((src_buf_3_3_reg_566_pp1_iter7_reg < sel_SEBB6_fu_1434_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_3_4_fu_1456_p2 = ((src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg < src_buf_load_0_3_3_s_reg_1849) ? 1'b1 : 1'b0);

assign tmp_49_0_3_fu_1402_p2 = ((ap_phi_mux_src_buf_3_phi_fu_608_p4 < sel_SEBB5_fu_1395_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_4_1_fu_1480_p2 = ((src_buf_4_1_reg_769_pp1_iter8_reg < sel_SEBB7_fu_1472_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_4_2_fu_1494_p2 = ((src_buf_4_2_reg_782_pp1_iter9_reg < src_buf_load_0_4_1_s_reg_1855) ? 1'b1 : 1'b0);

assign tmp_49_0_4_3_fu_1506_p2 = ((src_buf_4_3_reg_795_pp1_iter9_reg < src_buf_load_0_4_2_s_fu_1499_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_4_4_fu_1520_p2 = ((src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg < sel_SEBB8_fu_1512_p3) ? 1'b1 : 1'b0);

assign tmp_49_0_4_fu_1466_p2 = ((ap_phi_mux_src_buf_4_phi_fu_558_p4 < src_buf_load_0_3_4_s_fu_1460_p3) ? 1'b1 : 1'b0);

assign tmp_4_fu_1050_p2 = ((tmp_12_cast_fu_1046_p1 < op2_assign_1_reg_1691) ? 1'b1 : 1'b0);

assign tmp_5_cast2_fu_1004_p1 = t_V_4_reg_530;

assign tmp_5_cast_fu_1008_p1 = t_V_4_reg_530;

assign tmp_8_fu_1012_p2 = ((tmp_5_cast_fu_1008_p1 < op2_assign_reg_1686) ? 1'b1 : 1'b0);

assign tmp_9_fu_1017_p2 = ((tmp_5_cast2_fu_1004_p1 < img_height) ? 1'b1 : 1'b0);

assign tmp_cast_fu_983_p1 = t_V_2_reg_464;

assign tmp_fu_901_p2 = (op_assign_cast_reg_1621 + rd_ind_reg_408);

always @ (posedge ap_clk) begin
    row_ind_4_V_load_reg_1582[12:3] <= 10'b0000000000;
    row_ind_4_V_1_load_reg_1587[12:3] <= 10'b0000000000;
    row_ind_4_V_2_load_reg_1592[12:3] <= 10'b0000000000;
    row_ind_4_V_3_load_reg_1597[12:3] <= 10'b0000000000;
    row_ind_4_V_4_load_reg_1602[12:3] <= 10'b0000000000;
    op_assign_cast7_reg_1615[17:16] <= 2'b00;
    op_assign_cast_reg_1621[16] <= 1'b0;
    row_ind_4_V_fu_136[12:3] <= 10'b0000000000;
    row_ind_4_V_1_fu_140[12:3] <= 10'b0000000000;
    row_ind_4_V_2_fu_144[12:3] <= 10'b0000000000;
    row_ind_4_V_3_fu_148[12:3] <= 10'b0000000000;
    row_ind_4_V_4_fu_152[12:3] <= 10'b0000000000;
end

endmodule //xferode
