// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1473;
reg   [0:0] exitcond460_i_reg_1473_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1482;
reg   [0:0] or_cond_i_i_reg_1482_pp0_iter1_reg;
reg   [0:0] icmp_reg_1418;
reg   [0:0] tmp_7_reg_1413;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1499;
reg   [0:0] or_cond_i_reg_1499_pp0_iter4_reg;
reg   [31:0] t_V_4_reg_317;
wire   [31:0] tmp_s_fu_328_p2;
reg   [31:0] tmp_s_reg_1341;
wire   [31:0] tmp_1_fu_334_p2;
reg   [31:0] tmp_1_reg_1346;
wire   [31:0] p_neg465_i_fu_340_p2;
reg   [31:0] p_neg465_i_reg_1351;
wire   [31:0] tmp_2_fu_346_p2;
reg   [31:0] tmp_2_reg_1358;
wire   [31:0] tmp_4_fu_358_p2;
reg   [31:0] tmp_4_reg_1363;
wire  signed [9:0] tmp_244_0_1_cast_fu_364_p1;
reg  signed [9:0] tmp_244_0_1_cast_reg_1370;
wire  signed [9:0] tmp_244_0_2_cast_fu_368_p1;
reg  signed [9:0] tmp_244_0_2_cast_reg_1375;
wire  signed [10:0] tmp_244_1_cast_fu_372_p1;
reg  signed [10:0] tmp_244_1_cast_reg_1380;
wire   [11:0] tmp_244_1_2_cast_fu_376_p1;
reg   [11:0] tmp_244_1_2_cast_reg_1385;
wire  signed [9:0] tmp_244_2_cast_fu_380_p1;
reg  signed [9:0] tmp_244_2_cast_reg_1390;
wire   [10:0] tmp_244_2_1_cast_fu_384_p1;
reg   [10:0] tmp_244_2_1_cast_reg_1395;
wire   [31:0] tmp_6_fu_394_p2;
reg   [31:0] tmp_6_reg_1400;
wire   [31:0] i_V_fu_405_p2;
reg   [31:0] i_V_reg_1408;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_7_fu_411_p2;
wire   [0:0] exitcond461_i_fu_400_p2;
wire   [0:0] icmp_fu_426_p2;
wire   [0:0] tmp_9_fu_432_p2;
reg   [0:0] tmp_9_reg_1423;
wire   [0:0] tmp_203_1_fu_438_p2;
reg   [0:0] tmp_203_1_reg_1427;
wire   [0:0] tmp_10_fu_444_p2;
reg   [0:0] tmp_10_reg_1431;
wire   [31:0] y_fu_646_p3;
reg   [31:0] y_reg_1438;
wire   [31:0] y_1_fu_662_p3;
reg   [31:0] y_1_reg_1443;
wire   [31:0] y_2_fu_678_p3;
reg   [31:0] y_2_reg_1448;
wire   [0:0] tmp_159_0_not_fu_686_p2;
reg   [0:0] tmp_159_0_not_reg_1453;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_42_fu_695_p1;
reg   [1:0] tmp_42_reg_1458;
wire   [1:0] tmp_43_fu_703_p1;
reg   [1:0] tmp_43_reg_1463;
wire   [1:0] tmp_44_fu_711_p1;
reg   [1:0] tmp_44_reg_1468;
wire   [0:0] exitcond460_i_fu_715_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op171_read_state6;
reg    ap_predicate_op182_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_state9_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_1473_pp0_iter2_reg;
wire   [31:0] j_V_fu_720_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_767_p2;
wire   [31:0] x_fu_831_p3;
reg   [31:0] x_reg_1486;
wire   [0:0] brmerge_fu_839_p2;
reg   [0:0] brmerge_reg_1492;
reg   [0:0] brmerge_reg_1492_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_844_p2;
reg   [0:0] or_cond_i_reg_1499_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1499_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1499_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1503;
wire   [1:0] tmp_48_fu_859_p1;
reg   [1:0] tmp_48_reg_1509;
reg   [10:0] k_buf_0_val_4_addr_reg_1516;
reg   [10:0] k_buf_0_val_5_addr_reg_1522;
wire   [7:0] src_kernel_win_0_va_6_fu_982_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1528;
wire   [7:0] src_kernel_win_0_va_7_fu_1000_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1534;
reg   [7:0] src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_1018_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1540;
wire  signed [10:0] grp_fu_1204_p3;
reg  signed [10:0] sum_V_0_1_reg_1545;
wire  signed [11:0] grp_fu_1218_p3;
reg  signed [11:0] sum_V_1_1_reg_1550;
reg    ap_enable_reg_pp0_iter3;
wire  signed [10:0] grp_fu_1233_p3;
reg  signed [10:0] tmp24_reg_1555;
wire   [15:0] p_Val2_5_fu_1196_p3;
reg   [15:0] p_Val2_5_reg_1560;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter2_state6;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_306;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_19_fu_853_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_132;
reg   [7:0] src_kernel_win_0_va_1_fu_136;
reg   [7:0] src_kernel_win_0_va_2_fu_140;
reg   [7:0] src_kernel_win_0_va_3_fu_144;
reg   [7:0] src_kernel_win_0_va_4_fu_148;
reg   [7:0] src_kernel_win_0_va_5_fu_152;
reg   [7:0] right_border_buf_0_s_fu_156;
wire   [7:0] col_buf_0_val_0_0_fu_892_p3;
reg   [7:0] right_border_buf_0_1_fu_160;
reg   [7:0] right_border_buf_0_2_fu_164;
reg   [7:0] right_border_buf_0_3_fu_168;
wire   [7:0] col_buf_0_val_1_0_fu_910_p3;
reg   [7:0] right_border_buf_0_4_fu_172;
reg   [7:0] right_border_buf_0_5_fu_176;
wire   [7:0] col_buf_0_val_2_0_fu_928_p3;
wire   [31:0] tmp_33_fu_352_p2;
wire   [31:0] tmp_34_fu_388_p2;
wire   [30:0] tmp_35_fu_416_p4;
wire   [31:0] tmp_11_fu_449_p2;
wire   [0:0] tmp_36_fu_455_p3;
wire   [0:0] tmp_13_fu_469_p2;
wire   [0:0] rev_fu_463_p2;
wire   [0:0] tmp_37_fu_480_p3;
wire   [31:0] p_assign_7_fu_488_p2;
wire   [31:0] p_p2_i497_i_fu_494_p3;
wire   [31:0] p_assign_6_1_fu_512_p2;
wire   [0:0] tmp_38_fu_518_p3;
wire   [0:0] tmp_229_1_fu_532_p2;
wire   [0:0] rev11_fu_526_p2;
wire   [0:0] tmp_39_fu_543_p3;
wire   [31:0] p_assign_7_1_fu_551_p2;
wire   [31:0] p_p2_i497_i_1_fu_557_p3;
wire   [31:0] p_assign_6_2_fu_575_p2;
wire   [0:0] tmp_40_fu_581_p3;
wire   [0:0] tmp_229_2_fu_595_p2;
wire   [0:0] rev12_fu_589_p2;
wire   [0:0] tmp_41_fu_606_p3;
wire   [31:0] p_assign_7_2_fu_614_p2;
wire   [31:0] p_p2_i497_i_2_fu_620_p3;
wire   [0:0] tmp_15_fu_502_p2;
wire   [31:0] p_assign_8_fu_507_p2;
wire   [0:0] or_cond_i496_i_fu_474_p2;
wire   [31:0] p_p2_i497_i_p_assign_8_fu_638_p3;
wire   [0:0] tmp_238_1_fu_565_p2;
wire   [31:0] p_assign_8_1_fu_570_p2;
wire   [0:0] or_cond_i496_i_1_fu_537_p2;
wire   [31:0] p_p2_i497_i_1_p_assig_fu_654_p3;
wire   [0:0] tmp_238_2_fu_628_p2;
wire   [31:0] p_assign_8_2_fu_633_p2;
wire   [0:0] or_cond_i496_i_2_fu_600_p2;
wire   [31:0] p_p2_i497_i_2_p_assig_fu_670_p3;
wire   [31:0] row_assign_s_fu_691_p2;
wire   [31:0] row_assign_10_1_fu_699_p2;
wire   [31:0] row_assign_10_2_fu_707_p2;
wire   [30:0] tmp_45_fu_726_p4;
wire   [31:0] ImagLoc_x_fu_742_p2;
wire   [0:0] tmp_46_fu_748_p3;
wire   [0:0] tmp_17_fu_762_p2;
wire   [0:0] rev13_fu_756_p2;
wire   [0:0] tmp_47_fu_773_p3;
wire   [31:0] p_assign_1_fu_781_p2;
wire   [31:0] p_p2_i_i_fu_787_p3;
wire   [31:0] p_assign_2_fu_800_p2;
wire   [0:0] tmp_19_not_fu_813_p2;
wire   [0:0] tmp_18_fu_795_p2;
wire   [0:0] sel_tmp7_fu_819_p2;
wire   [0:0] sel_tmp8_fu_825_p2;
wire   [31:0] p_assign_3_fu_805_p3;
wire   [0:0] icmp3_fu_736_p2;
wire   [31:0] col_assign_1_fu_849_p2;
wire   [7:0] tmp_20_fu_881_p5;
wire   [7:0] tmp_21_fu_899_p5;
wire   [7:0] tmp_22_fu_917_p5;
wire   [7:0] tmp_23_fu_971_p5;
wire   [7:0] tmp_24_fu_989_p5;
wire   [7:0] tmp_25_fu_1007_p5;
wire   [8:0] r_V_0_cast_fu_1031_p1;
wire  signed [8:0] r_V_s_fu_1035_p2;
wire  signed [10:0] grp_fu_1211_p3;
wire  signed [9:0] grp_fu_1225_p3;
wire  signed [11:0] grp_fu_1240_p3;
wire  signed [11:0] tmp24_cast_fu_1122_p1;
(* use_dsp48 = "no" *) wire  signed [11:0] p_Val2_s_fu_1125_p2;
wire   [0:0] tmp_52_fu_1142_p3;
wire   [0:0] p_Result_s_fu_1130_p3;
wire   [0:0] p_not1_i_i_fu_1150_p2;
wire   [0:0] p_Result_not_fu_1168_p2;
wire   [0:0] brmerge2_i_i_fu_1162_p2;
wire  signed [15:0] p_Val2_1_fu_1138_p1;
wire   [0:0] underflow_fu_1156_p2;
wire   [0:0] brmerge3_i_i_fu_1174_p2;
wire   [15:0] p_mux_i_i_fu_1180_p3;
wire   [15:0] p_i_i_fu_1188_p3;
wire  signed [1:0] grp_fu_1204_p0;
wire   [7:0] grp_fu_1204_p1;
wire  signed [1:0] grp_fu_1211_p0;
wire   [7:0] grp_fu_1211_p1;
wire  signed [2:0] grp_fu_1218_p0;
wire   [7:0] grp_fu_1218_p1;
wire  signed [1:0] grp_fu_1225_p0;
wire   [7:0] grp_fu_1225_p1;
wire   [7:0] grp_fu_1225_p2;
wire   [2:0] grp_fu_1233_p0;
wire   [7:0] grp_fu_1233_p1;
wire   [3:0] grp_fu_1240_p0;
wire   [7:0] grp_fu_1240_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_145;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_162;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_predicate_op176_store_state6;
reg    ap_enable_operation_176;
reg    ap_predicate_op183_store_state6;
reg    ap_enable_operation_183;
reg    ap_enable_operation_148;
reg    ap_enable_operation_165;
reg    ap_predicate_op174_store_state6;
reg    ap_enable_operation_174;
reg    ap_predicate_op181_store_state6;
reg    ap_enable_operation_181;
reg    ap_predicate_op150_load_state5;
reg    ap_enable_operation_150;
reg    ap_predicate_op168_load_state6;
reg    ap_enable_operation_168;
reg    ap_predicate_op172_store_state6;
reg    ap_enable_operation_172;
reg    ap_predicate_op180_store_state6;
reg    ap_enable_operation_180;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1204_p10;
wire   [9:0] grp_fu_1211_p10;
wire   [10:0] grp_fu_1218_p10;
wire   [9:0] grp_fu_1225_p10;
wire   [9:0] grp_fu_1225_p20;
wire   [10:0] grp_fu_1233_p10;
wire   [11:0] grp_fu_1240_p10;
reg    ap_condition_1019;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U56(
    .din0(right_border_buf_0_s_fu_156),
    .din1(right_border_buf_0_1_fu_160),
    .din2(8'd0),
    .din3(tmp_48_reg_1509),
    .dout(tmp_20_fu_881_p5)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U57(
    .din0(right_border_buf_0_3_fu_168),
    .din1(right_border_buf_0_4_fu_172),
    .din2(8'd0),
    .din3(tmp_48_reg_1509),
    .dout(tmp_21_fu_899_p5)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U58(
    .din0(right_border_buf_0_5_fu_176),
    .din1(right_border_buf_0_2_fu_164),
    .din2(8'd0),
    .din3(tmp_48_reg_1509),
    .dout(tmp_22_fu_917_p5)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U59(
    .din0(col_buf_0_val_0_0_fu_892_p3),
    .din1(col_buf_0_val_1_0_fu_910_p3),
    .din2(col_buf_0_val_2_0_fu_928_p3),
    .din3(tmp_42_reg_1458),
    .dout(tmp_23_fu_971_p5)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U60(
    .din0(col_buf_0_val_0_0_fu_892_p3),
    .din1(col_buf_0_val_1_0_fu_910_p3),
    .din2(col_buf_0_val_2_0_fu_928_p3),
    .din3(tmp_43_reg_1463),
    .dout(tmp_24_fu_989_p5)
);

canny_edge_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32hbi_U61(
    .din0(col_buf_0_val_0_0_fu_892_p3),
    .din1(col_buf_0_val_1_0_fu_910_p3),
    .din2(col_buf_0_val_2_0_fu_928_p3),
    .din3(tmp_44_reg_1468),
    .dout(tmp_25_fu_1007_p5)
);

canny_edge_mac_muibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_muibs_U62(
    .din0(grp_fu_1204_p0),
    .din1(grp_fu_1204_p1),
    .din2(r_V_s_fu_1035_p2),
    .dout(grp_fu_1204_p3)
);

canny_edge_mac_mujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_mujbC_U63(
    .din0(grp_fu_1211_p0),
    .din1(grp_fu_1211_p1),
    .din2(sum_V_0_1_reg_1545),
    .dout(grp_fu_1211_p3)
);

canny_edge_mac_mukbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
canny_edge_mac_mukbM_U64(
    .din0(grp_fu_1218_p0),
    .din1(grp_fu_1218_p1),
    .din2(grp_fu_1211_p3),
    .dout(grp_fu_1218_p3)
);

canny_edge_mac_mulbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
canny_edge_mac_mulbW_U65(
    .din0(grp_fu_1225_p0),
    .din1(grp_fu_1225_p1),
    .din2(grp_fu_1225_p2),
    .dout(grp_fu_1225_p3)
);

canny_edge_mac_mumb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_mumb6_U66(
    .din0(grp_fu_1233_p0),
    .din1(grp_fu_1233_p1),
    .din2(grp_fu_1225_p3),
    .dout(grp_fu_1233_p3)
);

canny_edge_mac_muncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
canny_edge_mac_muncg_U67(
    .din0(grp_fu_1240_p0),
    .din1(grp_fu_1240_p1),
    .din2(sum_V_1_1_reg_1550),
    .dout(grp_fu_1240_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_715_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_715_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_317 <= j_V_fu_720_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_4_reg_317 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_reg_306 <= i_V_reg_1408;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_306 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_715_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1492 <= brmerge_fu_839_p2;
        or_cond_i_i_reg_1482 <= or_cond_i_i_fu_767_p2;
        or_cond_i_reg_1499 <= or_cond_i_fu_844_p2;
        x_reg_1486 <= x_fu_831_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1492_pp0_iter1_reg <= brmerge_reg_1492;
        exitcond460_i_reg_1473 <= exitcond460_i_fu_715_p2;
        exitcond460_i_reg_1473_pp0_iter1_reg <= exitcond460_i_reg_1473;
        or_cond_i_i_reg_1482_pp0_iter1_reg <= or_cond_i_i_reg_1482;
        or_cond_i_reg_1499_pp0_iter1_reg <= or_cond_i_reg_1499;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond460_i_reg_1473_pp0_iter2_reg <= exitcond460_i_reg_1473_pp0_iter1_reg;
        or_cond_i_reg_1499_pp0_iter2_reg <= or_cond_i_reg_1499_pp0_iter1_reg;
        or_cond_i_reg_1499_pp0_iter3_reg <= or_cond_i_reg_1499_pp0_iter2_reg;
        or_cond_i_reg_1499_pp0_iter4_reg <= or_cond_i_reg_1499_pp0_iter3_reg;
        src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg <= src_kernel_win_0_va_7_reg_1534;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1408 <= i_V_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_400_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1418 <= icmp_fu_426_p2;
        tmp_10_reg_1431 <= tmp_10_fu_444_p2;
        tmp_203_1_reg_1427 <= tmp_203_1_fu_438_p2;
        tmp_7_reg_1413 <= tmp_7_fu_411_p2;
        tmp_9_reg_1423 <= tmp_9_fu_432_p2;
        y_1_reg_1443 <= y_1_fu_662_p3;
        y_2_reg_1448 <= y_2_fu_678_p3;
        y_reg_1438 <= y_fu_646_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1473 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1503 <= tmp_19_fu_853_p1;
        k_buf_0_val_4_addr_reg_1516 <= tmp_19_fu_853_p1;
        k_buf_0_val_5_addr_reg_1522 <= tmp_19_fu_853_p1;
        tmp_48_reg_1509 <= tmp_48_fu_859_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1499_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_5_reg_1560 <= p_Val2_5_fu_1196_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_neg465_i_reg_1351 <= p_neg465_i_fu_340_p2;
        tmp_1_reg_1346 <= tmp_1_fu_334_p2;
        tmp_244_0_1_cast_reg_1370 <= tmp_244_0_1_cast_fu_364_p1;
        tmp_244_0_2_cast_reg_1375 <= tmp_244_0_2_cast_fu_368_p1;
        tmp_244_1_2_cast_reg_1385[3 : 0] <= tmp_244_1_2_cast_fu_376_p1[3 : 0];
        tmp_244_1_cast_reg_1380 <= tmp_244_1_cast_fu_372_p1;
        tmp_244_2_1_cast_reg_1395[2 : 0] <= tmp_244_2_1_cast_fu_384_p1[2 : 0];
        tmp_244_2_cast_reg_1390 <= tmp_244_2_cast_fu_380_p1;
        tmp_2_reg_1358 <= tmp_2_fu_346_p2;
        tmp_4_reg_1363[31 : 1] <= tmp_4_fu_358_p2[31 : 1];
        tmp_6_reg_1400[31 : 1] <= tmp_6_fu_394_p2[31 : 1];
        tmp_s_reg_1341 <= tmp_s_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_160 <= right_border_buf_0_s_fu_156;
        right_border_buf_0_2_fu_164 <= right_border_buf_0_5_fu_176;
        right_border_buf_0_3_fu_168 <= col_buf_0_val_1_0_fu_910_p3;
        right_border_buf_0_4_fu_172 <= right_border_buf_0_3_fu_168;
        right_border_buf_0_5_fu_176 <= col_buf_0_val_2_0_fu_928_p3;
        right_border_buf_0_s_fu_156 <= col_buf_0_val_0_0_fu_892_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1473_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_136 <= src_kernel_win_0_va_fu_132;
        src_kernel_win_0_va_2_fu_140 <= src_kernel_win_0_va_7_reg_1534;
        src_kernel_win_0_va_3_fu_144 <= src_kernel_win_0_va_2_fu_140;
        src_kernel_win_0_va_fu_132 <= src_kernel_win_0_va_6_reg_1528;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_148 <= src_kernel_win_0_va_8_fu_1018_p3;
        src_kernel_win_0_va_5_fu_152 <= src_kernel_win_0_va_4_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_6_reg_1528 <= src_kernel_win_0_va_6_fu_982_p3;
        src_kernel_win_0_va_7_reg_1534 <= src_kernel_win_0_va_7_fu_1000_p3;
        src_kernel_win_0_va_8_reg_1540 <= src_kernel_win_0_va_8_fu_1018_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1499_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_1_reg_1545 <= grp_fu_1204_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1499_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_1_1_reg_1550 <= grp_fu_1218_p3;
        tmp24_reg_1555 <= grp_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_159_0_not_reg_1453 <= tmp_159_0_not_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_1431 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_42_reg_1458 <= tmp_42_fu_695_p1;
        tmp_43_reg_1463 <= tmp_43_fu_703_p1;
        tmp_44_reg_1468 <= tmp_44_fu_711_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_203_1_reg_1427 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1019)) begin
        if (((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_203_1_reg_1427 == 1'd1) & (icmp_reg_1418 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_203_1_reg_1427 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1019)) begin
        if (((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_9_reg_1423 == 1'd1) & (icmp_reg_1418 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op171_read_state6 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_742_p2 = ($signed(32'd4294967295) + $signed(t_V_4_reg_317));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter5 = ((or_cond_i_reg_1499_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1019 = ((or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_145 = (exitcond460_i_reg_1473 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_148 = (exitcond460_i_reg_1473 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_162 = (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_165 = (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_172 = (ap_predicate_op172_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_174 = (ap_predicate_op174_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_176 = (ap_predicate_op176_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_180 = (ap_predicate_op180_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_181 = (ap_predicate_op181_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_183 = (ap_predicate_op183_store_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op150_load_state5 = ((brmerge_reg_1492 == 1'd1) & (exitcond460_i_reg_1473 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_load_state6 = ((brmerge_reg_1492_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_read_state6 = ((or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_store_state6 = ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_store_state6 = ((tmp_203_1_reg_1427 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op176_store_state6 = ((tmp_9_reg_1423 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (icmp_reg_1418 == 1'd0) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op180_store_state6 = ((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op181_store_state6 = ((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_read_state6 = ((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op183_store_state6 = ((tmp_7_reg_1413 == 1'd1) & (icmp_reg_1418 == 1'd1) & (or_cond_i_i_reg_1482_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1473_pp0_iter1_reg == 1'd0));
end

assign brmerge2_i_i_fu_1162_p2 = (tmp_52_fu_1142_p3 ^ p_Result_s_fu_1130_p3);

assign brmerge3_i_i_fu_1174_p2 = (tmp_52_fu_1142_p3 | p_Result_not_fu_1168_p2);

assign brmerge_fu_839_p2 = (tmp_17_fu_762_p2 | tmp_159_0_not_reg_1453);

assign col_assign_1_fu_849_p2 = (tmp_2_reg_1358 - x_reg_1486);

assign col_buf_0_val_0_0_fu_892_p3 = ((brmerge_reg_1492_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_20_fu_881_p5);

assign col_buf_0_val_1_0_fu_910_p3 = ((brmerge_reg_1492_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_21_fu_899_p5);

assign col_buf_0_val_2_0_fu_928_p3 = ((brmerge_reg_1492_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_22_fu_917_p5);

assign exitcond460_i_fu_715_p2 = ((t_V_4_reg_317 == tmp_s_reg_1341) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_400_p2 = ((t_V_reg_306 == tmp_1_reg_1346) ? 1'b1 : 1'b0);

assign grp_fu_1204_p0 = tmp_244_0_1_cast_reg_1370;

assign grp_fu_1204_p1 = grp_fu_1204_p10;

assign grp_fu_1204_p10 = src_kernel_win_0_va_4_fu_148;

assign grp_fu_1211_p0 = tmp_244_0_2_cast_reg_1375;

assign grp_fu_1211_p1 = grp_fu_1211_p10;

assign grp_fu_1211_p10 = src_kernel_win_0_va_8_reg_1540;

assign grp_fu_1218_p0 = tmp_244_1_cast_reg_1380;

assign grp_fu_1218_p1 = grp_fu_1218_p10;

assign grp_fu_1218_p10 = src_kernel_win_0_va_3_fu_144;

assign grp_fu_1225_p0 = tmp_244_2_cast_reg_1390;

assign grp_fu_1225_p1 = grp_fu_1225_p10;

assign grp_fu_1225_p10 = src_kernel_win_0_va_1_fu_136;

assign grp_fu_1225_p2 = grp_fu_1225_p20;

assign grp_fu_1225_p20 = src_kernel_win_0_va_6_reg_1528;

assign grp_fu_1233_p0 = tmp_244_2_1_cast_reg_1395;

assign grp_fu_1233_p1 = grp_fu_1233_p10;

assign grp_fu_1233_p10 = src_kernel_win_0_va_fu_132;

assign grp_fu_1240_p0 = tmp_244_1_2_cast_reg_1385;

assign grp_fu_1240_p1 = grp_fu_1240_p10;

assign grp_fu_1240_p10 = src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg;

assign i_V_fu_405_p2 = (t_V_reg_306 + 32'd1);

assign icmp3_fu_736_p2 = ((tmp_45_fu_726_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_426_p2 = ((tmp_35_fu_416_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_720_p2 = (t_V_4_reg_317 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_19_fu_853_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1503;

assign k_buf_0_val_4_address0 = tmp_19_fu_853_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1516;

assign k_buf_0_val_5_address0 = tmp_19_fu_853_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1522;

assign or_cond_i496_i_1_fu_537_p2 = (tmp_229_1_fu_532_p2 & rev11_fu_526_p2);

assign or_cond_i496_i_2_fu_600_p2 = (tmp_229_2_fu_595_p2 & rev12_fu_589_p2);

assign or_cond_i496_i_fu_474_p2 = (tmp_13_fu_469_p2 & rev_fu_463_p2);

assign or_cond_i_fu_844_p2 = (icmp_reg_1418 & icmp3_fu_736_p2);

assign or_cond_i_i_fu_767_p2 = (tmp_17_fu_762_p2 & rev13_fu_756_p2);

assign p_Result_not_fu_1168_p2 = (p_Result_s_fu_1130_p3 ^ 1'd1);

assign p_Result_s_fu_1130_p3 = p_Val2_s_fu_1125_p2[32'd11];

assign p_Val2_1_fu_1138_p1 = p_Val2_s_fu_1125_p2;

assign p_Val2_5_fu_1196_p3 = ((brmerge3_i_i_fu_1174_p2[0:0] === 1'b1) ? p_mux_i_i_fu_1180_p3 : p_i_i_fu_1188_p3);

assign p_Val2_s_fu_1125_p2 = ($signed(grp_fu_1240_p3) + $signed(tmp24_cast_fu_1122_p1));

assign p_assign_1_fu_781_p2 = (32'd1 - t_V_4_reg_317);

assign p_assign_2_fu_800_p2 = (tmp_6_reg_1400 - p_p2_i_i_fu_787_p3);

assign p_assign_3_fu_805_p3 = ((or_cond_i_i_fu_767_p2[0:0] === 1'b1) ? ImagLoc_x_fu_742_p2 : p_assign_2_fu_800_p2);

assign p_assign_6_1_fu_512_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_306));

assign p_assign_6_2_fu_575_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_306));

assign p_assign_7_1_fu_551_p2 = (32'd2 - t_V_reg_306);

assign p_assign_7_2_fu_614_p2 = (32'd3 - t_V_reg_306);

assign p_assign_7_fu_488_p2 = (32'd1 - t_V_reg_306);

assign p_assign_8_1_fu_570_p2 = (tmp_4_reg_1363 - p_p2_i497_i_1_fu_557_p3);

assign p_assign_8_2_fu_633_p2 = (tmp_4_reg_1363 - p_p2_i497_i_2_fu_620_p3);

assign p_assign_8_fu_507_p2 = (tmp_4_reg_1363 - p_p2_i497_i_fu_494_p3);

assign p_dst_data_stream_V_din = p_Val2_5_reg_1560;

assign p_i_i_fu_1188_p3 = ((underflow_fu_1156_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_1_fu_1138_p1);

assign p_mux_i_i_fu_1180_p3 = ((brmerge2_i_i_fu_1162_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_1_fu_1138_p1);

assign p_neg465_i_fu_340_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V_read));

assign p_not1_i_i_fu_1150_p2 = (tmp_52_fu_1142_p3 ^ 1'd1);

assign p_p2_i497_i_1_fu_557_p3 = ((tmp_39_fu_543_p3[0:0] === 1'b1) ? p_assign_7_1_fu_551_p2 : p_assign_6_1_fu_512_p2);

assign p_p2_i497_i_1_p_assig_fu_654_p3 = ((tmp_238_1_fu_565_p2[0:0] === 1'b1) ? p_p2_i497_i_1_fu_557_p3 : p_assign_8_1_fu_570_p2);

assign p_p2_i497_i_2_fu_620_p3 = ((tmp_41_fu_606_p3[0:0] === 1'b1) ? p_assign_7_2_fu_614_p2 : p_assign_6_2_fu_575_p2);

assign p_p2_i497_i_2_p_assig_fu_670_p3 = ((tmp_238_2_fu_628_p2[0:0] === 1'b1) ? p_p2_i497_i_2_fu_620_p3 : p_assign_8_2_fu_633_p2);

assign p_p2_i497_i_fu_494_p3 = ((tmp_37_fu_480_p3[0:0] === 1'b1) ? p_assign_7_fu_488_p2 : tmp_11_fu_449_p2);

assign p_p2_i497_i_p_assign_8_fu_638_p3 = ((tmp_15_fu_502_p2[0:0] === 1'b1) ? p_p2_i497_i_fu_494_p3 : p_assign_8_fu_507_p2);

assign p_p2_i_i_fu_787_p3 = ((tmp_47_fu_773_p3[0:0] === 1'b1) ? p_assign_1_fu_781_p2 : ImagLoc_x_fu_742_p2);

assign r_V_0_cast_fu_1031_p1 = src_kernel_win_0_va_5_fu_152;

assign r_V_s_fu_1035_p2 = (9'd0 - r_V_0_cast_fu_1031_p1);

assign rev11_fu_526_p2 = (tmp_38_fu_518_p3 ^ 1'd1);

assign rev12_fu_589_p2 = (tmp_40_fu_581_p3 ^ 1'd1);

assign rev13_fu_756_p2 = (tmp_46_fu_748_p3 ^ 1'd1);

assign rev_fu_463_p2 = (tmp_36_fu_455_p3 ^ 1'd1);

assign row_assign_10_1_fu_699_p2 = (p_neg465_i_reg_1351 - y_1_reg_1443);

assign row_assign_10_2_fu_707_p2 = (p_neg465_i_reg_1351 - y_2_reg_1448);

assign row_assign_s_fu_691_p2 = (p_neg465_i_reg_1351 - y_reg_1438);

assign sel_tmp7_fu_819_p2 = (tmp_46_fu_748_p3 | tmp_19_not_fu_813_p2);

assign sel_tmp8_fu_825_p2 = (tmp_18_fu_795_p2 & sel_tmp7_fu_819_p2);

assign src_kernel_win_0_va_6_fu_982_p3 = ((tmp_10_reg_1431[0:0] === 1'b1) ? tmp_23_fu_971_p5 : col_buf_0_val_0_0_fu_892_p3);

assign src_kernel_win_0_va_7_fu_1000_p3 = ((tmp_10_reg_1431[0:0] === 1'b1) ? tmp_24_fu_989_p5 : col_buf_0_val_1_0_fu_910_p3);

assign src_kernel_win_0_va_8_fu_1018_p3 = ((tmp_10_reg_1431[0:0] === 1'b1) ? tmp_25_fu_1007_p5 : col_buf_0_val_2_0_fu_928_p3);

assign tmp24_cast_fu_1122_p1 = tmp24_reg_1555;

assign tmp_10_fu_444_p2 = ((t_V_reg_306 > p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_11_fu_449_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_306));

assign tmp_13_fu_469_p2 = (($signed(tmp_11_fu_449_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_159_0_not_fu_686_p2 = (tmp_7_reg_1413 ^ 1'd1);

assign tmp_15_fu_502_p2 = (($signed(p_p2_i497_i_fu_494_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_17_fu_762_p2 = (($signed(ImagLoc_x_fu_742_p2) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_18_fu_795_p2 = (($signed(p_p2_i_i_fu_787_p3) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_19_fu_853_p1 = x_reg_1486;

assign tmp_19_not_fu_813_p2 = (tmp_17_fu_762_p2 ^ 1'd1);

assign tmp_1_fu_334_p2 = (32'd2 + p_src_rows_V_read);

assign tmp_203_1_fu_438_p2 = ((t_V_reg_306 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_229_1_fu_532_p2 = (($signed(p_assign_6_1_fu_512_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_229_2_fu_595_p2 = (($signed(p_assign_6_2_fu_575_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_238_1_fu_565_p2 = (($signed(p_p2_i497_i_1_fu_557_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_238_2_fu_628_p2 = (($signed(p_p2_i497_i_2_fu_620_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_244_0_1_cast_fu_364_p1 = $signed(p_kernel_val_0_V_1_read);

assign tmp_244_0_2_cast_fu_368_p1 = $signed(p_kernel_val_0_V_2_read);

assign tmp_244_1_2_cast_fu_376_p1 = p_kernel_val_1_V_2_read;

assign tmp_244_1_cast_fu_372_p1 = $signed(p_kernel_val_1_V_0_read);

assign tmp_244_2_1_cast_fu_384_p1 = p_kernel_val_2_V_1_read;

assign tmp_244_2_cast_fu_380_p1 = $signed(p_kernel_val_2_V_0_read);

assign tmp_2_fu_346_p2 = (32'd3 + p_src_cols_V_read);

assign tmp_33_fu_352_p2 = p_src_rows_V_read << 32'd1;

assign tmp_34_fu_388_p2 = p_src_cols_V_read << 32'd1;

assign tmp_35_fu_416_p4 = {{t_V_reg_306[31:1]}};

assign tmp_36_fu_455_p3 = tmp_11_fu_449_p2[32'd31];

assign tmp_37_fu_480_p3 = tmp_11_fu_449_p2[32'd31];

assign tmp_38_fu_518_p3 = p_assign_6_1_fu_512_p2[32'd31];

assign tmp_39_fu_543_p3 = p_assign_6_1_fu_512_p2[32'd31];

assign tmp_40_fu_581_p3 = p_assign_6_2_fu_575_p2[32'd31];

assign tmp_41_fu_606_p3 = p_assign_6_2_fu_575_p2[32'd31];

assign tmp_42_fu_695_p1 = row_assign_s_fu_691_p2[1:0];

assign tmp_43_fu_703_p1 = row_assign_10_1_fu_699_p2[1:0];

assign tmp_44_fu_711_p1 = row_assign_10_2_fu_707_p2[1:0];

assign tmp_45_fu_726_p4 = {{t_V_4_reg_317[31:1]}};

assign tmp_46_fu_748_p3 = ImagLoc_x_fu_742_p2[32'd31];

assign tmp_47_fu_773_p3 = ImagLoc_x_fu_742_p2[32'd31];

assign tmp_48_fu_859_p1 = col_assign_1_fu_849_p2[1:0];

assign tmp_4_fu_358_p2 = (32'd2 + tmp_33_fu_352_p2);

assign tmp_52_fu_1142_p3 = p_Val2_s_fu_1125_p2[32'd11];

assign tmp_6_fu_394_p2 = ($signed(32'd4294967294) + $signed(tmp_34_fu_388_p2));

assign tmp_7_fu_411_p2 = ((t_V_reg_306 < p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_9_fu_432_p2 = ((t_V_reg_306 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_s_fu_328_p2 = (32'd2 + p_src_cols_V_read);

assign underflow_fu_1156_p2 = (p_not1_i_i_fu_1150_p2 & p_Result_s_fu_1130_p3);

assign x_fu_831_p3 = ((sel_tmp8_fu_825_p2[0:0] === 1'b1) ? p_p2_i_i_fu_787_p3 : p_assign_3_fu_805_p3);

assign y_1_fu_662_p3 = ((or_cond_i496_i_1_fu_537_p2[0:0] === 1'b1) ? p_assign_6_1_fu_512_p2 : p_p2_i497_i_1_p_assig_fu_654_p3);

assign y_2_fu_678_p3 = ((or_cond_i496_i_2_fu_600_p2[0:0] === 1'b1) ? p_assign_6_2_fu_575_p2 : p_p2_i497_i_2_p_assig_fu_670_p3);

assign y_fu_646_p3 = ((or_cond_i496_i_fu_474_p2[0:0] === 1'b1) ? tmp_11_fu_449_p2 : p_p2_i497_i_p_assign_8_fu_638_p3);

always @ (posedge ap_clk) begin
    tmp_4_reg_1363[0] <= 1'b0;
    tmp_244_1_2_cast_reg_1385[11:4] <= 8'b00000000;
    tmp_244_2_1_cast_reg_1395[10:3] <= 8'b00000000;
    tmp_6_reg_1400[0] <= 1'b0;
end

endmodule //Filter2D
