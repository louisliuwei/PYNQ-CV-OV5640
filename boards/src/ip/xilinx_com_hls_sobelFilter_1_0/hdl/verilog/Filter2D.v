// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1528;
reg   [0:0] exitcond388_i_reg_1528_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1537;
reg   [0:0] or_cond_i_i_reg_1537_pp0_iter1_reg;
reg   [0:0] icmp_reg_1473;
reg   [0:0] tmp_5_reg_1468;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1554;
reg   [0:0] or_cond_i_reg_1554_pp0_iter4_reg;
reg   [31:0] t_V_2_reg_323;
wire   [31:0] tmp_s_fu_334_p2;
reg   [31:0] tmp_s_reg_1396;
wire   [31:0] tmp_1_fu_340_p2;
reg   [31:0] tmp_1_reg_1401;
wire   [31:0] p_neg393_i_fu_346_p2;
reg   [31:0] p_neg393_i_reg_1406;
wire   [31:0] tmp_2_fu_352_p2;
reg   [31:0] tmp_2_reg_1413;
wire   [31:0] tmp_4_fu_364_p2;
reg   [31:0] tmp_4_reg_1418;
wire  signed [9:0] OP2_V_0_1_cast_fu_370_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1425;
wire  signed [9:0] OP2_V_0_2_cast_fu_374_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1430;
wire  signed [10:0] OP2_V_1_cast_fu_378_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1435;
wire   [11:0] OP2_V_1_2_cast_fu_382_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1440;
wire  signed [9:0] OP2_V_2_cast_fu_386_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1445;
wire   [10:0] OP2_V_2_1_cast_fu_390_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1450;
wire   [31:0] tmp_8_fu_400_p2;
reg   [31:0] tmp_8_reg_1455;
wire   [31:0] i_V_fu_411_p2;
reg   [31:0] i_V_reg_1463;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_5_fu_417_p2;
wire   [0:0] exitcond389_i_fu_406_p2;
wire   [0:0] icmp_fu_432_p2;
wire   [0:0] tmp_12_fu_438_p2;
reg   [0:0] tmp_12_reg_1478;
wire   [0:0] tmp_129_1_fu_444_p2;
reg   [0:0] tmp_129_1_reg_1482;
wire   [0:0] tmp_13_fu_450_p2;
reg   [0:0] tmp_13_reg_1486;
wire   [31:0] y_1_fu_652_p3;
reg   [31:0] y_1_reg_1493;
wire   [31:0] y_1_1_fu_668_p3;
reg   [31:0] y_1_1_reg_1498;
wire   [31:0] y_1_2_fu_684_p3;
reg   [31:0] y_1_2_reg_1503;
wire   [0:0] tmp_85_0_not_fu_692_p2;
reg   [0:0] tmp_85_0_not_reg_1508;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_23_fu_701_p1;
reg   [1:0] tmp_23_reg_1513;
wire   [1:0] tmp_24_fu_709_p1;
reg   [1:0] tmp_24_reg_1518;
wire   [1:0] tmp_32_fu_717_p1;
reg   [1:0] tmp_32_reg_1523;
wire   [0:0] exitcond388_i_fu_721_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op171_read_state6;
reg    ap_predicate_op182_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_state9_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_reg_1528_pp0_iter2_reg;
wire   [31:0] j_V_fu_726_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_773_p2;
wire   [31:0] x_fu_837_p3;
reg   [31:0] x_reg_1541;
wire   [0:0] brmerge_fu_845_p2;
reg   [0:0] brmerge_reg_1547;
reg   [0:0] brmerge_reg_1547_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_850_p2;
reg   [0:0] or_cond_i_reg_1554_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1554_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1554_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1558;
wire   [1:0] tmp_37_fu_865_p1;
reg   [1:0] tmp_37_reg_1564;
reg   [10:0] k_buf_0_val_4_addr_reg_1571;
reg   [10:0] k_buf_0_val_5_addr_reg_1577;
wire   [7:0] src_kernel_win_0_va_6_fu_988_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1583;
wire   [7:0] src_kernel_win_0_va_7_fu_1006_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1590;
wire   [7:0] src_kernel_win_0_va_8_fu_1024_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1596;
wire  signed [10:0] grp_fu_1287_p3;
reg  signed [10:0] p_Val2_10_0_1_reg_1601;
wire   [11:0] p_Val2_10_1_1_fu_1103_p2;
reg   [11:0] p_Val2_10_1_1_reg_1606;
wire   [11:0] r_V_7_1_2_fu_1112_p2;
reg   [11:0] r_V_7_1_2_reg_1611;
wire   [7:0] tmp_44_fu_1136_p1;
reg   [7:0] tmp_44_reg_1616;
wire   [10:0] tmp22_fu_1166_p2;
reg   [10:0] tmp22_reg_1621;
wire   [7:0] tmp24_fu_1172_p2;
reg   [7:0] tmp24_reg_1626;
wire   [7:0] tmp26_fu_1178_p2;
reg   [7:0] tmp26_reg_1631;
wire   [7:0] p_Val2_s_fu_1279_p3;
reg   [7:0] p_Val2_s_reg_1636;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state6;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_312;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_25_fu_859_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_138;
reg   [7:0] src_kernel_win_0_va_1_fu_142;
reg   [7:0] src_kernel_win_0_va_2_fu_146;
reg   [7:0] src_kernel_win_0_va_3_fu_150;
reg   [7:0] src_kernel_win_0_va_4_fu_154;
reg   [7:0] src_kernel_win_0_va_5_fu_158;
reg   [7:0] right_border_buf_0_s_fu_162;
wire   [7:0] col_buf_0_val_0_0_fu_898_p3;
reg   [7:0] right_border_buf_0_1_fu_166;
reg   [7:0] right_border_buf_0_2_fu_170;
reg   [7:0] right_border_buf_0_3_fu_174;
wire   [7:0] col_buf_0_val_1_0_fu_916_p3;
reg   [7:0] right_border_buf_0_4_fu_178;
reg   [7:0] right_border_buf_0_5_fu_182;
wire   [7:0] col_buf_0_val_2_0_fu_934_p3;
wire   [31:0] tmp_3_fu_358_p2;
wire   [31:0] tmp_7_fu_394_p2;
wire   [30:0] tmp_10_fu_422_p4;
wire   [31:0] tmp_14_fu_455_p2;
wire   [0:0] tmp_15_fu_461_p3;
wire   [0:0] tmp_16_fu_475_p2;
wire   [0:0] rev_fu_469_p2;
wire   [0:0] tmp_17_fu_486_p3;
wire   [31:0] p_assign_7_fu_494_p2;
wire   [31:0] p_p2_i425_i_fu_500_p3;
wire   [31:0] p_assign_6_1_fu_518_p2;
wire   [0:0] tmp_19_fu_524_p3;
wire   [0:0] tmp_155_1_fu_538_p2;
wire   [0:0] rev1_fu_532_p2;
wire   [0:0] tmp_20_fu_549_p3;
wire   [31:0] p_assign_7_1_fu_557_p2;
wire   [31:0] p_p2_i425_i_1_fu_563_p3;
wire   [31:0] p_assign_6_2_fu_581_p2;
wire   [0:0] tmp_21_fu_587_p3;
wire   [0:0] tmp_155_2_fu_601_p2;
wire   [0:0] rev2_fu_595_p2;
wire   [0:0] tmp_22_fu_612_p3;
wire   [31:0] p_assign_7_2_fu_620_p2;
wire   [31:0] p_p2_i425_i_2_fu_626_p3;
wire   [0:0] tmp_18_fu_508_p2;
wire   [31:0] p_assign_8_fu_513_p2;
wire   [0:0] or_cond_i424_i_fu_480_p2;
wire   [31:0] p_p2_i425_i_p_assign_8_fu_644_p3;
wire   [0:0] tmp_165_1_fu_571_p2;
wire   [31:0] p_assign_8_1_fu_576_p2;
wire   [0:0] or_cond_i424_i_1_fu_543_p2;
wire   [31:0] p_p2_i425_i_1_p_assig_fu_660_p3;
wire   [0:0] tmp_165_2_fu_634_p2;
wire   [31:0] p_assign_8_2_fu_639_p2;
wire   [0:0] or_cond_i424_i_2_fu_606_p2;
wire   [31:0] p_p2_i425_i_2_p_assig_fu_676_p3;
wire   [31:0] row_assign_s_fu_697_p2;
wire   [31:0] row_assign_10_1_fu_705_p2;
wire   [31:0] row_assign_10_2_fu_713_p2;
wire   [30:0] tmp_33_fu_732_p4;
wire   [31:0] ImagLoc_x_fu_748_p2;
wire   [0:0] tmp_34_fu_754_p3;
wire   [0:0] tmp_9_fu_768_p2;
wire   [0:0] rev3_fu_762_p2;
wire   [0:0] tmp_36_fu_779_p3;
wire   [31:0] p_assign_1_fu_787_p2;
wire   [31:0] p_p2_i_i_fu_793_p3;
wire   [31:0] p_assign_2_fu_806_p2;
wire   [0:0] tmp_9_not_fu_819_p2;
wire   [0:0] tmp_11_fu_801_p2;
wire   [0:0] sel_tmp7_fu_825_p2;
wire   [0:0] sel_tmp8_fu_831_p2;
wire   [31:0] p_assign_3_fu_811_p3;
wire   [0:0] icmp1_fu_742_p2;
wire   [31:0] col_assign_1_fu_855_p2;
wire   [7:0] tmp_26_fu_887_p5;
wire   [7:0] tmp_27_fu_905_p5;
wire   [7:0] tmp_28_fu_923_p5;
wire   [7:0] tmp_29_fu_977_p5;
wire   [7:0] tmp_30_fu_995_p5;
wire   [7:0] tmp_31_fu_1013_p5;
wire   [8:0] OP1_V_0_cast_fu_1037_p1;
wire  signed [8:0] r_V_7_fu_1041_p2;
wire  signed [10:0] grp_fu_1294_p3;
wire  signed [2:0] r_V_7_1_fu_1087_p0;
wire   [7:0] r_V_7_1_fu_1087_p1;
wire  signed [10:0] r_V_7_1_fu_1087_p2;
wire  signed [11:0] tmp_173_1_cast_cast_fu_1092_p1;
wire  signed [11:0] p_Val2_10_0_2_cast_fu_1080_p1;
wire   [3:0] r_V_7_1_2_fu_1112_p0;
wire   [7:0] r_V_7_1_2_fu_1112_p1;
wire   [7:0] tmp_42_fu_1100_p1;
wire   [7:0] tmp_41_fu_1096_p1;
wire  signed [1:0] r_V_7_2_fu_1131_p0;
wire   [7:0] r_V_7_2_fu_1131_p1;
wire   [9:0] r_V_7_2_fu_1131_p2;
wire   [2:0] r_V_7_2_1_fu_1144_p0;
wire   [7:0] r_V_7_2_1_fu_1144_p1;
wire   [10:0] r_V_7_2_1_fu_1144_p2;
wire   [9:0] tmp_173_2_2_cast_cas_fu_1153_p1;
wire   [9:0] tmp23_fu_1156_p2;
wire  signed [10:0] tmp23_cast_fu_1162_p1;
wire   [7:0] tmp_35_fu_1121_p2;
wire   [7:0] tmp_43_fu_1117_p1;
wire   [7:0] tmp_45_fu_1149_p1;
wire   [11:0] tmp21_fu_1207_p2;
wire  signed [11:0] tmp22_cast_fu_1211_p1;
wire   [11:0] p_Val2_2_fu_1214_p2;
wire   [7:0] tmp25_fu_1228_p2;
wire   [0:0] isneg_fu_1220_p3;
wire   [3:0] tmp_38_fu_1237_p4;
wire   [0:0] not_i_i_i_fu_1253_p2;
wire   [0:0] tmp_i_i_fu_1247_p2;
wire   [0:0] overflow_fu_1259_p2;
wire   [0:0] tmp_i_i_61_fu_1273_p2;
wire   [7:0] p_mux_i_i_cast_fu_1265_p3;
wire   [7:0] p_Val2_1_fu_1232_p2;
wire  signed [1:0] grp_fu_1287_p0;
wire   [7:0] grp_fu_1287_p1;
wire  signed [1:0] grp_fu_1294_p0;
wire   [7:0] grp_fu_1294_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1287_p10;
wire   [9:0] grp_fu_1294_p10;
wire   [11:0] r_V_7_1_2_fu_1112_p10;
wire   [10:0] r_V_7_1_fu_1087_p10;
wire   [10:0] r_V_7_2_1_fu_1144_p10;
wire   [9:0] r_V_7_2_fu_1131_p10;
reg    ap_condition_392;
reg    ap_condition_386;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1558),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1571),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1577),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U39(
    .din0(right_border_buf_0_s_fu_162),
    .din1(right_border_buf_0_1_fu_166),
    .din2(8'd0),
    .din3(tmp_37_reg_1564),
    .dout(tmp_26_fu_887_p5)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U40(
    .din0(right_border_buf_0_3_fu_174),
    .din1(right_border_buf_0_4_fu_178),
    .din2(8'd0),
    .din3(tmp_37_reg_1564),
    .dout(tmp_27_fu_905_p5)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U41(
    .din0(right_border_buf_0_5_fu_182),
    .din1(right_border_buf_0_2_fu_170),
    .din2(8'd0),
    .din3(tmp_37_reg_1564),
    .dout(tmp_28_fu_923_p5)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U42(
    .din0(col_buf_0_val_0_0_fu_898_p3),
    .din1(col_buf_0_val_1_0_fu_916_p3),
    .din2(col_buf_0_val_2_0_fu_934_p3),
    .din3(tmp_23_reg_1513),
    .dout(tmp_29_fu_977_p5)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U43(
    .din0(col_buf_0_val_0_0_fu_898_p3),
    .din1(col_buf_0_val_1_0_fu_916_p3),
    .din2(col_buf_0_val_2_0_fu_934_p3),
    .din3(tmp_24_reg_1518),
    .dout(tmp_30_fu_995_p5)
);

sobelFilter_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobelFilter_mux_3hbi_U44(
    .din0(col_buf_0_val_0_0_fu_898_p3),
    .din1(col_buf_0_val_1_0_fu_916_p3),
    .din2(col_buf_0_val_2_0_fu_934_p3),
    .din3(tmp_32_reg_1523),
    .dout(tmp_31_fu_1013_p5)
);

sobelFilter_mac_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobelFilter_mac_mibs_U45(
    .din0(grp_fu_1287_p0),
    .din1(grp_fu_1287_p1),
    .din2(r_V_7_fu_1041_p2),
    .dout(grp_fu_1287_p3)
);

sobelFilter_mac_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobelFilter_mac_mjbC_U46(
    .din0(grp_fu_1294_p0),
    .din1(grp_fu_1294_p1),
    .din2(p_Val2_10_0_1_reg_1601),
    .dout(grp_fu_1294_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_721_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_721_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_323 <= j_V_fu_726_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_2_reg_323 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_reg_312 <= i_V_reg_1463;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_312 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        OP2_V_0_1_cast_reg_1425 <= OP2_V_0_1_cast_fu_370_p1;
        OP2_V_0_2_cast_reg_1430 <= OP2_V_0_2_cast_fu_374_p1;
        OP2_V_1_2_cast_reg_1440[3 : 0] <= OP2_V_1_2_cast_fu_382_p1[3 : 0];
        OP2_V_1_cast_reg_1435 <= OP2_V_1_cast_fu_378_p1;
        OP2_V_2_1_cast_reg_1450[2 : 0] <= OP2_V_2_1_cast_fu_390_p1[2 : 0];
        OP2_V_2_cast_reg_1445 <= OP2_V_2_cast_fu_386_p1;
        p_neg393_i_reg_1406 <= p_neg393_i_fu_346_p2;
        tmp_1_reg_1401 <= tmp_1_fu_340_p2;
        tmp_2_reg_1413 <= tmp_2_fu_352_p2;
        tmp_4_reg_1418[31 : 1] <= tmp_4_fu_364_p2[31 : 1];
        tmp_8_reg_1455[31 : 1] <= tmp_8_fu_400_p2[31 : 1];
        tmp_s_reg_1396 <= tmp_s_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1547 <= brmerge_fu_845_p2;
        or_cond_i_i_reg_1537 <= or_cond_i_i_fu_773_p2;
        or_cond_i_reg_1554 <= or_cond_i_fu_850_p2;
        x_reg_1541 <= x_fu_837_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1547_pp0_iter1_reg <= brmerge_reg_1547;
        exitcond388_i_reg_1528 <= exitcond388_i_fu_721_p2;
        exitcond388_i_reg_1528_pp0_iter1_reg <= exitcond388_i_reg_1528;
        or_cond_i_i_reg_1537_pp0_iter1_reg <= or_cond_i_i_reg_1537;
        or_cond_i_reg_1554_pp0_iter1_reg <= or_cond_i_reg_1554;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond388_i_reg_1528_pp0_iter2_reg <= exitcond388_i_reg_1528_pp0_iter1_reg;
        or_cond_i_reg_1554_pp0_iter2_reg <= or_cond_i_reg_1554_pp0_iter1_reg;
        or_cond_i_reg_1554_pp0_iter3_reg <= or_cond_i_reg_1554_pp0_iter2_reg;
        or_cond_i_reg_1554_pp0_iter4_reg <= or_cond_i_reg_1554_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1463 <= i_V_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1473 <= icmp_fu_432_p2;
        tmp_129_1_reg_1482 <= tmp_129_1_fu_444_p2;
        tmp_12_reg_1478 <= tmp_12_fu_438_p2;
        tmp_13_reg_1486 <= tmp_13_fu_450_p2;
        tmp_5_reg_1468 <= tmp_5_fu_417_p2;
        y_1_1_reg_1498 <= y_1_1_fu_668_p3;
        y_1_2_reg_1503 <= y_1_2_fu_684_p3;
        y_1_reg_1493 <= y_1_fu_652_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1528 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1558 <= tmp_25_fu_859_p1;
        k_buf_0_val_4_addr_reg_1571 <= tmp_25_fu_859_p1;
        k_buf_0_val_5_addr_reg_1577 <= tmp_25_fu_859_p1;
        tmp_37_reg_1564 <= tmp_37_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1554_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_10_0_1_reg_1601 <= grp_fu_1287_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1554_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_10_1_1_reg_1606 <= p_Val2_10_1_1_fu_1103_p2;
        r_V_7_1_2_reg_1611 <= r_V_7_1_2_fu_1112_p2;
        tmp22_reg_1621 <= tmp22_fu_1166_p2;
        tmp24_reg_1626 <= tmp24_fu_1172_p2;
        tmp26_reg_1631 <= tmp26_fu_1178_p2;
        tmp_44_reg_1616 <= tmp_44_fu_1136_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1554_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1636 <= p_Val2_s_fu_1279_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1))) begin
        right_border_buf_0_1_fu_166 <= right_border_buf_0_s_fu_162;
        right_border_buf_0_2_fu_170 <= right_border_buf_0_5_fu_182;
        right_border_buf_0_3_fu_174 <= col_buf_0_val_1_0_fu_916_p3;
        right_border_buf_0_4_fu_178 <= right_border_buf_0_3_fu_174;
        right_border_buf_0_5_fu_182 <= col_buf_0_val_2_0_fu_934_p3;
        right_border_buf_0_s_fu_162 <= col_buf_0_val_0_0_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1528_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_142 <= src_kernel_win_0_va_fu_138;
        src_kernel_win_0_va_2_fu_146 <= src_kernel_win_0_va_7_reg_1590;
        src_kernel_win_0_va_3_fu_150 <= src_kernel_win_0_va_2_fu_146;
        src_kernel_win_0_va_fu_138 <= src_kernel_win_0_va_6_reg_1583;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_154 <= src_kernel_win_0_va_8_fu_1024_p3;
        src_kernel_win_0_va_5_fu_158 <= src_kernel_win_0_va_4_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_6_reg_1583 <= src_kernel_win_0_va_6_fu_988_p3;
        src_kernel_win_0_va_7_reg_1590 <= src_kernel_win_0_va_7_fu_1006_p3;
        src_kernel_win_0_va_8_reg_1596 <= src_kernel_win_0_va_8_fu_1024_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_13_reg_1486 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_23_reg_1513 <= tmp_23_fu_701_p1;
        tmp_24_reg_1518 <= tmp_24_fu_709_p1;
        tmp_32_reg_1523 <= tmp_32_fu_717_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_85_0_not_reg_1508 <= tmp_85_0_not_fu_692_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond389_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_12_reg_1478 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_12_reg_1478 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_129_1_reg_1482 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op182_read_state6 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_392)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_129_1_reg_1482 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_12_reg_1478 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op182_read_state6 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_386)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_12_reg_1478 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1468 == 1'd1) & (icmp_reg_1473 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op182_read_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op171_read_state6 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_748_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_323));

assign OP1_V_0_cast_fu_1037_p1 = src_kernel_win_0_va_5_fu_158;

assign OP2_V_0_1_cast_fu_370_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_374_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_382_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_378_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_390_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_386_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)))));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state6 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op171_read_state6 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter5 = ((or_cond_i_reg_1554_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_386 = ((tmp_12_reg_1478 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_392 = ((tmp_129_1_reg_1482 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op171_read_state6 = ((or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (icmp_reg_1473 == 1'd0) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_read_state6 = ((tmp_5_reg_1468 == 1'd1) & (icmp_reg_1473 == 1'd1) & (or_cond_i_i_reg_1537_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1528_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_845_p2 = (tmp_9_fu_768_p2 | tmp_85_0_not_reg_1508);

assign col_assign_1_fu_855_p2 = (tmp_2_reg_1413 - x_reg_1541);

assign col_buf_0_val_0_0_fu_898_p3 = ((brmerge_reg_1547_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_26_fu_887_p5);

assign col_buf_0_val_1_0_fu_916_p3 = ((brmerge_reg_1547_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_27_fu_905_p5);

assign col_buf_0_val_2_0_fu_934_p3 = ((brmerge_reg_1547_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_28_fu_923_p5);

assign exitcond388_i_fu_721_p2 = ((t_V_2_reg_323 == tmp_s_reg_1396) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_406_p2 = ((t_V_reg_312 == tmp_1_reg_1401) ? 1'b1 : 1'b0);

assign grp_fu_1287_p0 = OP2_V_0_1_cast_reg_1425;

assign grp_fu_1287_p1 = grp_fu_1287_p10;

assign grp_fu_1287_p10 = src_kernel_win_0_va_4_fu_154;

assign grp_fu_1294_p0 = OP2_V_0_2_cast_reg_1430;

assign grp_fu_1294_p1 = grp_fu_1294_p10;

assign grp_fu_1294_p10 = src_kernel_win_0_va_8_reg_1596;

assign i_V_fu_411_p2 = (t_V_reg_312 + 32'd1);

assign icmp1_fu_742_p2 = ((tmp_33_fu_732_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_432_p2 = ((tmp_10_fu_422_p4 != 31'd0) ? 1'b1 : 1'b0);

assign isneg_fu_1220_p3 = p_Val2_2_fu_1214_p2[32'd11];

assign j_V_fu_726_p2 = (t_V_2_reg_323 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_25_fu_859_p1;

assign k_buf_0_val_4_address0 = tmp_25_fu_859_p1;

assign k_buf_0_val_5_address0 = tmp_25_fu_859_p1;

assign not_i_i_i_fu_1253_p2 = ((tmp_38_fu_1237_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_1_fu_543_p2 = (tmp_155_1_fu_538_p2 & rev1_fu_532_p2);

assign or_cond_i424_i_2_fu_606_p2 = (tmp_155_2_fu_601_p2 & rev2_fu_595_p2);

assign or_cond_i424_i_fu_480_p2 = (tmp_16_fu_475_p2 & rev_fu_469_p2);

assign or_cond_i_fu_850_p2 = (icmp_reg_1473 & icmp1_fu_742_p2);

assign or_cond_i_i_fu_773_p2 = (tmp_9_fu_768_p2 & rev3_fu_762_p2);

assign overflow_fu_1259_p2 = (tmp_i_i_fu_1247_p2 & not_i_i_i_fu_1253_p2);

assign p_Val2_10_0_2_cast_fu_1080_p1 = grp_fu_1294_p3;

assign p_Val2_10_1_1_fu_1103_p2 = ($signed(tmp_173_1_cast_cast_fu_1092_p1) + $signed(p_Val2_10_0_2_cast_fu_1080_p1));

assign p_Val2_1_fu_1232_p2 = (tmp24_reg_1626 + tmp25_fu_1228_p2);

assign p_Val2_2_fu_1214_p2 = ($signed(tmp21_fu_1207_p2) + $signed(tmp22_cast_fu_1211_p1));

assign p_Val2_s_fu_1279_p3 = ((tmp_i_i_61_fu_1273_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1265_p3 : p_Val2_1_fu_1232_p2);

assign p_assign_1_fu_787_p2 = (32'd1 - t_V_2_reg_323);

assign p_assign_2_fu_806_p2 = (tmp_8_reg_1455 - p_p2_i_i_fu_793_p3);

assign p_assign_3_fu_811_p3 = ((or_cond_i_i_fu_773_p2[0:0] === 1'b1) ? ImagLoc_x_fu_748_p2 : p_assign_2_fu_806_p2);

assign p_assign_6_1_fu_518_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_312));

assign p_assign_6_2_fu_581_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_312));

assign p_assign_7_1_fu_557_p2 = (32'd2 - t_V_reg_312);

assign p_assign_7_2_fu_620_p2 = (32'd3 - t_V_reg_312);

assign p_assign_7_fu_494_p2 = (32'd1 - t_V_reg_312);

assign p_assign_8_1_fu_576_p2 = (tmp_4_reg_1418 - p_p2_i425_i_1_fu_563_p3);

assign p_assign_8_2_fu_639_p2 = (tmp_4_reg_1418 - p_p2_i425_i_2_fu_626_p3);

assign p_assign_8_fu_513_p2 = (tmp_4_reg_1418 - p_p2_i425_i_fu_500_p3);

assign p_dst_data_stream_V_din = p_Val2_s_reg_1636;

assign p_mux_i_i_cast_fu_1265_p3 = ((tmp_i_i_fu_1247_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_neg393_i_fu_346_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V_read));

assign p_p2_i425_i_1_fu_563_p3 = ((tmp_20_fu_549_p3[0:0] === 1'b1) ? p_assign_7_1_fu_557_p2 : p_assign_6_1_fu_518_p2);

assign p_p2_i425_i_1_p_assig_fu_660_p3 = ((tmp_165_1_fu_571_p2[0:0] === 1'b1) ? p_p2_i425_i_1_fu_563_p3 : p_assign_8_1_fu_576_p2);

assign p_p2_i425_i_2_fu_626_p3 = ((tmp_22_fu_612_p3[0:0] === 1'b1) ? p_assign_7_2_fu_620_p2 : p_assign_6_2_fu_581_p2);

assign p_p2_i425_i_2_p_assig_fu_676_p3 = ((tmp_165_2_fu_634_p2[0:0] === 1'b1) ? p_p2_i425_i_2_fu_626_p3 : p_assign_8_2_fu_639_p2);

assign p_p2_i425_i_fu_500_p3 = ((tmp_17_fu_486_p3[0:0] === 1'b1) ? p_assign_7_fu_494_p2 : tmp_14_fu_455_p2);

assign p_p2_i425_i_p_assign_8_fu_644_p3 = ((tmp_18_fu_508_p2[0:0] === 1'b1) ? p_p2_i425_i_fu_500_p3 : p_assign_8_fu_513_p2);

assign p_p2_i_i_fu_793_p3 = ((tmp_36_fu_779_p3[0:0] === 1'b1) ? p_assign_1_fu_787_p2 : ImagLoc_x_fu_748_p2);

assign r_V_7_1_2_fu_1112_p0 = OP2_V_1_2_cast_reg_1440;

assign r_V_7_1_2_fu_1112_p1 = r_V_7_1_2_fu_1112_p10;

assign r_V_7_1_2_fu_1112_p10 = src_kernel_win_0_va_7_reg_1590;

assign r_V_7_1_2_fu_1112_p2 = (r_V_7_1_2_fu_1112_p0 * r_V_7_1_2_fu_1112_p1);

assign r_V_7_1_fu_1087_p0 = OP2_V_1_cast_reg_1435;

assign r_V_7_1_fu_1087_p1 = r_V_7_1_fu_1087_p10;

assign r_V_7_1_fu_1087_p10 = src_kernel_win_0_va_3_fu_150;

assign r_V_7_1_fu_1087_p2 = ($signed(r_V_7_1_fu_1087_p0) * $signed({{1'b0}, {r_V_7_1_fu_1087_p1}}));

assign r_V_7_2_1_fu_1144_p0 = OP2_V_2_1_cast_reg_1450;

assign r_V_7_2_1_fu_1144_p1 = r_V_7_2_1_fu_1144_p10;

assign r_V_7_2_1_fu_1144_p10 = src_kernel_win_0_va_fu_138;

assign r_V_7_2_1_fu_1144_p2 = (r_V_7_2_1_fu_1144_p0 * r_V_7_2_1_fu_1144_p1);

assign r_V_7_2_fu_1131_p0 = OP2_V_2_cast_reg_1445;

assign r_V_7_2_fu_1131_p1 = r_V_7_2_fu_1131_p10;

assign r_V_7_2_fu_1131_p10 = src_kernel_win_0_va_1_fu_142;

assign r_V_7_2_fu_1131_p2 = ($signed(r_V_7_2_fu_1131_p0) * $signed({{1'b0}, {r_V_7_2_fu_1131_p1}}));

assign r_V_7_fu_1041_p2 = (9'd0 - OP1_V_0_cast_fu_1037_p1);

assign rev1_fu_532_p2 = (tmp_19_fu_524_p3 ^ 1'd1);

assign rev2_fu_595_p2 = (tmp_21_fu_587_p3 ^ 1'd1);

assign rev3_fu_762_p2 = (tmp_34_fu_754_p3 ^ 1'd1);

assign rev_fu_469_p2 = (tmp_15_fu_461_p3 ^ 1'd1);

assign row_assign_10_1_fu_705_p2 = (p_neg393_i_reg_1406 - y_1_1_reg_1498);

assign row_assign_10_2_fu_713_p2 = (p_neg393_i_reg_1406 - y_1_2_reg_1503);

assign row_assign_s_fu_697_p2 = (p_neg393_i_reg_1406 - y_1_reg_1493);

assign sel_tmp7_fu_825_p2 = (tmp_9_not_fu_819_p2 | tmp_34_fu_754_p3);

assign sel_tmp8_fu_831_p2 = (tmp_11_fu_801_p2 & sel_tmp7_fu_825_p2);

assign src_kernel_win_0_va_6_fu_988_p3 = ((tmp_13_reg_1486[0:0] === 1'b1) ? tmp_29_fu_977_p5 : col_buf_0_val_0_0_fu_898_p3);

assign src_kernel_win_0_va_7_fu_1006_p3 = ((tmp_13_reg_1486[0:0] === 1'b1) ? tmp_30_fu_995_p5 : col_buf_0_val_1_0_fu_916_p3);

assign src_kernel_win_0_va_8_fu_1024_p3 = ((tmp_13_reg_1486[0:0] === 1'b1) ? tmp_31_fu_1013_p5 : col_buf_0_val_2_0_fu_934_p3);

assign tmp21_fu_1207_p2 = (r_V_7_1_2_reg_1611 + p_Val2_10_1_1_reg_1606);

assign tmp22_cast_fu_1211_p1 = $signed(tmp22_reg_1621);

assign tmp22_fu_1166_p2 = ($signed(r_V_7_2_1_fu_1144_p2) + $signed(tmp23_cast_fu_1162_p1));

assign tmp23_cast_fu_1162_p1 = $signed(tmp23_fu_1156_p2);

assign tmp23_fu_1156_p2 = (tmp_173_2_2_cast_cas_fu_1153_p1 + r_V_7_2_fu_1131_p2);

assign tmp24_fu_1172_p2 = (tmp_35_fu_1121_p2 + tmp_43_fu_1117_p1);

assign tmp25_fu_1228_p2 = (tmp_44_reg_1616 + tmp26_reg_1631);

assign tmp26_fu_1178_p2 = (src_kernel_win_0_va_6_reg_1583 + tmp_45_fu_1149_p1);

assign tmp_10_fu_422_p4 = {{t_V_reg_312[31:1]}};

assign tmp_11_fu_801_p2 = (($signed(p_p2_i_i_fu_793_p3) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_129_1_fu_444_p2 = ((t_V_reg_312 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_12_fu_438_p2 = ((t_V_reg_312 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_13_fu_450_p2 = ((t_V_reg_312 > p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_14_fu_455_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_312));

assign tmp_155_1_fu_538_p2 = (($signed(p_assign_6_1_fu_518_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_155_2_fu_601_p2 = (($signed(p_assign_6_2_fu_581_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_15_fu_461_p3 = tmp_14_fu_455_p2[32'd31];

assign tmp_165_1_fu_571_p2 = (($signed(p_p2_i425_i_1_fu_563_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_165_2_fu_634_p2 = (($signed(p_p2_i425_i_2_fu_626_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_16_fu_475_p2 = (($signed(tmp_14_fu_455_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_173_1_cast_cast_fu_1092_p1 = r_V_7_1_fu_1087_p2;

assign tmp_173_2_2_cast_cas_fu_1153_p1 = src_kernel_win_0_va_6_reg_1583;

assign tmp_17_fu_486_p3 = tmp_14_fu_455_p2[32'd31];

assign tmp_18_fu_508_p2 = (($signed(p_p2_i425_i_fu_500_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_19_fu_524_p3 = p_assign_6_1_fu_518_p2[32'd31];

assign tmp_1_fu_340_p2 = (32'd2 + p_src_rows_V_read);

assign tmp_20_fu_549_p3 = p_assign_6_1_fu_518_p2[32'd31];

assign tmp_21_fu_587_p3 = p_assign_6_2_fu_581_p2[32'd31];

assign tmp_22_fu_612_p3 = p_assign_6_2_fu_581_p2[32'd31];

assign tmp_23_fu_701_p1 = row_assign_s_fu_697_p2[1:0];

assign tmp_24_fu_709_p1 = row_assign_10_1_fu_705_p2[1:0];

assign tmp_25_fu_859_p1 = x_reg_1541;

assign tmp_2_fu_352_p2 = (32'd3 + p_src_cols_V_read);

assign tmp_32_fu_717_p1 = row_assign_10_2_fu_713_p2[1:0];

assign tmp_33_fu_732_p4 = {{t_V_2_reg_323[31:1]}};

assign tmp_34_fu_754_p3 = ImagLoc_x_fu_748_p2[32'd31];

assign tmp_35_fu_1121_p2 = (tmp_42_fu_1100_p1 + tmp_41_fu_1096_p1);

assign tmp_36_fu_779_p3 = ImagLoc_x_fu_748_p2[32'd31];

assign tmp_37_fu_865_p1 = col_assign_1_fu_855_p2[1:0];

assign tmp_38_fu_1237_p4 = {{p_Val2_2_fu_1214_p2[11:8]}};

assign tmp_3_fu_358_p2 = p_src_rows_V_read << 32'd1;

assign tmp_41_fu_1096_p1 = r_V_7_1_fu_1087_p2[7:0];

assign tmp_42_fu_1100_p1 = grp_fu_1294_p3[7:0];

assign tmp_43_fu_1117_p1 = r_V_7_1_2_fu_1112_p2[7:0];

assign tmp_44_fu_1136_p1 = r_V_7_2_fu_1131_p2[7:0];

assign tmp_45_fu_1149_p1 = r_V_7_2_1_fu_1144_p2[7:0];

assign tmp_4_fu_364_p2 = (32'd2 + tmp_3_fu_358_p2);

assign tmp_5_fu_417_p2 = ((t_V_reg_312 < p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_7_fu_394_p2 = p_src_cols_V_read << 32'd1;

assign tmp_85_0_not_fu_692_p2 = (tmp_5_reg_1468 ^ 1'd1);

assign tmp_8_fu_400_p2 = ($signed(32'd4294967294) + $signed(tmp_7_fu_394_p2));

assign tmp_9_fu_768_p2 = (($signed(ImagLoc_x_fu_748_p2) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_9_not_fu_819_p2 = (tmp_9_fu_768_p2 ^ 1'd1);

assign tmp_i_i_61_fu_1273_p2 = (overflow_fu_1259_p2 | isneg_fu_1220_p3);

assign tmp_i_i_fu_1247_p2 = (isneg_fu_1220_p3 ^ 1'd1);

assign tmp_s_fu_334_p2 = (32'd2 + p_src_cols_V_read);

assign x_fu_837_p3 = ((sel_tmp8_fu_831_p2[0:0] === 1'b1) ? p_p2_i_i_fu_793_p3 : p_assign_3_fu_811_p3);

assign y_1_1_fu_668_p3 = ((or_cond_i424_i_1_fu_543_p2[0:0] === 1'b1) ? p_assign_6_1_fu_518_p2 : p_p2_i425_i_1_p_assig_fu_660_p3);

assign y_1_2_fu_684_p3 = ((or_cond_i424_i_2_fu_606_p2[0:0] === 1'b1) ? p_assign_6_2_fu_581_p2 : p_p2_i425_i_2_p_assig_fu_676_p3);

assign y_1_fu_652_p3 = ((or_cond_i424_i_fu_480_p2[0:0] === 1'b1) ? tmp_14_fu_455_p2 : p_p2_i425_i_p_assign_8_fu_644_p3);

always @ (posedge ap_clk) begin
    tmp_4_reg_1418[0] <= 1'b0;
    OP2_V_1_2_cast_reg_1440[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1450[10:3] <= 8'b00000000;
    tmp_8_reg_1455[0] <= 1'b0;
end

endmodule //Filter2D
