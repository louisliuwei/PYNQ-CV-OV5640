// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="subsample,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=1262,HLS_SYN_LUT=2255,HLS_VERSION=2018_2}" *)

module subsample (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        in_r_TDATA,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TUSER,
        in_r_TLAST,
        in_r_TID,
        in_r_TDEST,
        out_r_TDATA,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TUSER,
        out_r_TLAST,
        out_r_TID,
        out_r_TDEST,
        in_r_TVALID,
        in_r_TREADY,
        out_r_TVALID,
        out_r_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] in_r_TDATA;
input  [2:0] in_r_TKEEP;
input  [2:0] in_r_TSTRB;
input  [0:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
input  [0:0] in_r_TID;
input  [0:0] in_r_TDEST;
output  [23:0] out_r_TDATA;
output  [2:0] out_r_TKEEP;
output  [2:0] out_r_TSTRB;
output  [0:0] out_r_TUSER;
output  [0:0] out_r_TLAST;
output  [0:0] out_r_TID;
output  [0:0] out_r_TDEST;
input   in_r_TVALID;
output   in_r_TREADY;
output   out_r_TVALID;
input   out_r_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] rows;
wire   [31:0] cols;
wire    Block_Mat_exit665_pr_U0_ap_start;
wire    Block_Mat_exit665_pr_U0_start_full_n;
wire    Block_Mat_exit665_pr_U0_ap_done;
wire    Block_Mat_exit665_pr_U0_ap_continue;
wire    Block_Mat_exit665_pr_U0_ap_idle;
wire    Block_Mat_exit665_pr_U0_ap_ready;
wire    Block_Mat_exit665_pr_U0_start_out;
wire    Block_Mat_exit665_pr_U0_start_write;
wire   [31:0] Block_Mat_exit665_pr_U0_rows_out_din;
wire    Block_Mat_exit665_pr_U0_rows_out_write;
wire   [31:0] Block_Mat_exit665_pr_U0_cols_out_din;
wire    Block_Mat_exit665_pr_U0_cols_out_write;
wire   [30:0] Block_Mat_exit665_pr_U0_dst_rows_V_out_din;
wire    Block_Mat_exit665_pr_U0_dst_rows_V_out_write;
wire   [30:0] Block_Mat_exit665_pr_U0_dst_cols_V_out_din;
wire    Block_Mat_exit665_pr_U0_dst_cols_V_out_write;
wire   [31:0] Block_Mat_exit665_pr_U0_ap_return_0;
wire   [31:0] Block_Mat_exit665_pr_U0_ap_return_1;
wire    ap_channel_done_src_cols_V_channel;
wire    src_cols_V_channel_full_n;
reg    ap_sync_reg_channel_write_src_cols_V_channel;
wire    ap_sync_channel_write_src_cols_V_channel;
wire    ap_channel_done_src_rows_V_channel;
wire    src_rows_V_channel_full_n;
reg    ap_sync_reg_channel_write_src_rows_V_channel;
wire    ap_sync_channel_write_src_rows_V_channel;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_in_r_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    Loop_L_row_proc36_U0_ap_start;
wire    Loop_L_row_proc36_U0_ap_done;
wire    Loop_L_row_proc36_U0_ap_continue;
wire    Loop_L_row_proc36_U0_ap_idle;
wire    Loop_L_row_proc36_U0_ap_ready;
wire    Loop_L_row_proc36_U0_rows_read;
wire    Loop_L_row_proc36_U0_cols_read;
wire    Loop_L_row_proc36_U0_src_data_stream_0_V_read;
wire    Loop_L_row_proc36_U0_src_data_stream_1_V_read;
wire    Loop_L_row_proc36_U0_src_data_stream_2_V_read;
wire   [7:0] Loop_L_row_proc36_U0_dst_data_stream_0_V_din;
wire    Loop_L_row_proc36_U0_dst_data_stream_0_V_write;
wire   [7:0] Loop_L_row_proc36_U0_dst_data_stream_1_V_din;
wire    Loop_L_row_proc36_U0_dst_data_stream_1_V_write;
wire   [7:0] Loop_L_row_proc36_U0_dst_data_stream_2_V_din;
wire    Loop_L_row_proc36_U0_dst_data_stream_2_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_rows_V_read;
wire    Mat2AXIvideo_U0_img_cols_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [23:0] Mat2AXIvideo_U0_out_r_TDATA;
wire    Mat2AXIvideo_U0_out_r_TVALID;
wire   [2:0] Mat2AXIvideo_U0_out_r_TKEEP;
wire   [2:0] Mat2AXIvideo_U0_out_r_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_out_r_TUSER;
wire   [0:0] Mat2AXIvideo_U0_out_r_TLAST;
wire   [0:0] Mat2AXIvideo_U0_out_r_TID;
wire   [0:0] Mat2AXIvideo_U0_out_r_TDEST;
wire    ap_sync_continue;
wire    rows_c_full_n;
wire   [31:0] rows_c_dout;
wire    rows_c_empty_n;
wire    cols_c_full_n;
wire   [31:0] cols_c_dout;
wire    cols_c_empty_n;
wire    dst_rows_V_c_full_n;
wire   [30:0] dst_rows_V_c_dout;
wire    dst_rows_V_c_empty_n;
wire    dst_cols_V_c_full_n;
wire   [30:0] dst_cols_V_c_dout;
wire    dst_cols_V_c_empty_n;
wire   [31:0] src_rows_V_channel_dout;
wire    src_rows_V_channel_empty_n;
wire   [31:0] src_cols_V_channel_dout;
wire    src_cols_V_channel_empty_n;
wire    src_data_stream_0_V_full_n;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_data_stream_1_V_full_n;
wire   [7:0] src_data_stream_1_V_dout;
wire    src_data_stream_1_V_empty_n;
wire    src_data_stream_2_V_full_n;
wire   [7:0] src_data_stream_2_V_dout;
wire    src_data_stream_2_V_empty_n;
wire    dst_data_stream_0_V_full_n;
wire   [7:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    dst_data_stream_1_V_full_n;
wire   [7:0] dst_data_stream_1_V_dout;
wire    dst_data_stream_1_V_empty_n;
wire    dst_data_stream_2_V_full_n;
wire   [7:0] dst_data_stream_2_V_dout;
wire    dst_data_stream_2_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready;
wire    ap_sync_Block_Mat_exit665_pr_U0_ap_ready;
reg   [1:0] Block_Mat_exit665_pr_U0_ap_ready_count;
wire   [0:0] start_for_Loop_L_row_proc36_U0_din;
wire    start_for_Loop_L_row_proc36_U0_full_n;
wire   [0:0] start_for_Loop_L_row_proc36_U0_dout;
wire    start_for_Loop_L_row_proc36_U0_empty_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    AXIvideo2Mat_U0_start_full_n;
wire    AXIvideo2Mat_U0_start_write;
wire    Loop_L_row_proc36_U0_start_full_n;
wire    Loop_L_row_proc36_U0_start_write;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_src_cols_V_channel = 1'b0;
#0 ap_sync_reg_channel_write_src_rows_V_channel = 1'b0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready = 1'b0;
#0 Block_Mat_exit665_pr_U0_ap_ready_count = 2'd0;
end

subsample_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
subsample_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rows(rows),
    .cols(cols)
);

Block_Mat_exit665_pr Block_Mat_exit665_pr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit665_pr_U0_ap_start),
    .start_full_n(Block_Mat_exit665_pr_U0_start_full_n),
    .ap_done(Block_Mat_exit665_pr_U0_ap_done),
    .ap_continue(Block_Mat_exit665_pr_U0_ap_continue),
    .ap_idle(Block_Mat_exit665_pr_U0_ap_idle),
    .ap_ready(Block_Mat_exit665_pr_U0_ap_ready),
    .start_out(Block_Mat_exit665_pr_U0_start_out),
    .start_write(Block_Mat_exit665_pr_U0_start_write),
    .rows(rows),
    .cols(cols),
    .rows_out_din(Block_Mat_exit665_pr_U0_rows_out_din),
    .rows_out_full_n(rows_c_full_n),
    .rows_out_write(Block_Mat_exit665_pr_U0_rows_out_write),
    .cols_out_din(Block_Mat_exit665_pr_U0_cols_out_din),
    .cols_out_full_n(cols_c_full_n),
    .cols_out_write(Block_Mat_exit665_pr_U0_cols_out_write),
    .dst_rows_V_out_din(Block_Mat_exit665_pr_U0_dst_rows_V_out_din),
    .dst_rows_V_out_full_n(dst_rows_V_c_full_n),
    .dst_rows_V_out_write(Block_Mat_exit665_pr_U0_dst_rows_V_out_write),
    .dst_cols_V_out_din(Block_Mat_exit665_pr_U0_dst_cols_V_out_din),
    .dst_cols_V_out_full_n(dst_cols_V_c_full_n),
    .dst_cols_V_out_write(Block_Mat_exit665_pr_U0_dst_cols_V_out_write),
    .ap_return_0(Block_Mat_exit665_pr_U0_ap_return_0),
    .ap_return_1(Block_Mat_exit665_pr_U0_ap_return_1)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .in_r_TDATA(in_r_TDATA),
    .in_r_TVALID(in_r_TVALID),
    .in_r_TREADY(AXIvideo2Mat_U0_in_r_TREADY),
    .in_r_TKEEP(in_r_TKEEP),
    .in_r_TSTRB(in_r_TSTRB),
    .in_r_TUSER(in_r_TUSER),
    .in_r_TLAST(in_r_TLAST),
    .in_r_TID(in_r_TID),
    .in_r_TDEST(in_r_TDEST),
    .img_rows_V_read(src_rows_V_channel_dout),
    .img_cols_V_read(src_cols_V_channel_dout),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(src_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(src_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(src_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write)
);

Loop_L_row_proc36 Loop_L_row_proc36_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_L_row_proc36_U0_ap_start),
    .ap_done(Loop_L_row_proc36_U0_ap_done),
    .ap_continue(Loop_L_row_proc36_U0_ap_continue),
    .ap_idle(Loop_L_row_proc36_U0_ap_idle),
    .ap_ready(Loop_L_row_proc36_U0_ap_ready),
    .rows_dout(rows_c_dout),
    .rows_empty_n(rows_c_empty_n),
    .rows_read(Loop_L_row_proc36_U0_rows_read),
    .cols_dout(cols_c_dout),
    .cols_empty_n(cols_c_empty_n),
    .cols_read(Loop_L_row_proc36_U0_cols_read),
    .src_data_stream_0_V_dout(src_data_stream_0_V_dout),
    .src_data_stream_0_V_empty_n(src_data_stream_0_V_empty_n),
    .src_data_stream_0_V_read(Loop_L_row_proc36_U0_src_data_stream_0_V_read),
    .src_data_stream_1_V_dout(src_data_stream_1_V_dout),
    .src_data_stream_1_V_empty_n(src_data_stream_1_V_empty_n),
    .src_data_stream_1_V_read(Loop_L_row_proc36_U0_src_data_stream_1_V_read),
    .src_data_stream_2_V_dout(src_data_stream_2_V_dout),
    .src_data_stream_2_V_empty_n(src_data_stream_2_V_empty_n),
    .src_data_stream_2_V_read(Loop_L_row_proc36_U0_src_data_stream_2_V_read),
    .dst_data_stream_0_V_din(Loop_L_row_proc36_U0_dst_data_stream_0_V_din),
    .dst_data_stream_0_V_full_n(dst_data_stream_0_V_full_n),
    .dst_data_stream_0_V_write(Loop_L_row_proc36_U0_dst_data_stream_0_V_write),
    .dst_data_stream_1_V_din(Loop_L_row_proc36_U0_dst_data_stream_1_V_din),
    .dst_data_stream_1_V_full_n(dst_data_stream_1_V_full_n),
    .dst_data_stream_1_V_write(Loop_L_row_proc36_U0_dst_data_stream_1_V_write),
    .dst_data_stream_2_V_din(Loop_L_row_proc36_U0_dst_data_stream_2_V_din),
    .dst_data_stream_2_V_full_n(dst_data_stream_2_V_full_n),
    .dst_data_stream_2_V_write(Loop_L_row_proc36_U0_dst_data_stream_2_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_rows_V_dout(dst_rows_V_c_dout),
    .img_rows_V_empty_n(dst_rows_V_c_empty_n),
    .img_rows_V_read(Mat2AXIvideo_U0_img_rows_V_read),
    .img_cols_V_dout(dst_cols_V_c_dout),
    .img_cols_V_empty_n(dst_cols_V_c_empty_n),
    .img_cols_V_read(Mat2AXIvideo_U0_img_cols_V_read),
    .img_data_stream_0_V_dout(dst_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(dst_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(dst_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(dst_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(dst_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(dst_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .out_r_TDATA(Mat2AXIvideo_U0_out_r_TDATA),
    .out_r_TVALID(Mat2AXIvideo_U0_out_r_TVALID),
    .out_r_TREADY(out_r_TREADY),
    .out_r_TKEEP(Mat2AXIvideo_U0_out_r_TKEEP),
    .out_r_TSTRB(Mat2AXIvideo_U0_out_r_TSTRB),
    .out_r_TUSER(Mat2AXIvideo_U0_out_r_TUSER),
    .out_r_TLAST(Mat2AXIvideo_U0_out_r_TLAST),
    .out_r_TID(Mat2AXIvideo_U0_out_r_TID),
    .out_r_TDEST(Mat2AXIvideo_U0_out_r_TDEST)
);

fifo_w32_d3_A rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_rows_out_din),
    .if_full_n(rows_c_full_n),
    .if_write(Block_Mat_exit665_pr_U0_rows_out_write),
    .if_dout(rows_c_dout),
    .if_empty_n(rows_c_empty_n),
    .if_read(Loop_L_row_proc36_U0_rows_read)
);

fifo_w32_d3_A cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_cols_out_din),
    .if_full_n(cols_c_full_n),
    .if_write(Block_Mat_exit665_pr_U0_cols_out_write),
    .if_dout(cols_c_dout),
    .if_empty_n(cols_c_empty_n),
    .if_read(Loop_L_row_proc36_U0_cols_read)
);

fifo_w31_d4_A dst_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_dst_rows_V_out_din),
    .if_full_n(dst_rows_V_c_full_n),
    .if_write(Block_Mat_exit665_pr_U0_dst_rows_V_out_write),
    .if_dout(dst_rows_V_c_dout),
    .if_empty_n(dst_rows_V_c_empty_n),
    .if_read(Mat2AXIvideo_U0_img_rows_V_read)
);

fifo_w31_d4_A dst_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_dst_cols_V_out_din),
    .if_full_n(dst_cols_V_c_full_n),
    .if_write(Block_Mat_exit665_pr_U0_dst_cols_V_out_write),
    .if_dout(dst_cols_V_c_dout),
    .if_empty_n(dst_cols_V_c_empty_n),
    .if_read(Mat2AXIvideo_U0_img_cols_V_read)
);

fifo_w32_d2_A src_rows_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_ap_return_0),
    .if_full_n(src_rows_V_channel_full_n),
    .if_write(ap_channel_done_src_rows_V_channel),
    .if_dout(src_rows_V_channel_dout),
    .if_empty_n(src_rows_V_channel_empty_n),
    .if_read(AXIvideo2Mat_U0_ap_ready)
);

fifo_w32_d2_A src_cols_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit665_pr_U0_ap_return_1),
    .if_full_n(src_cols_V_channel_full_n),
    .if_write(ap_channel_done_src_cols_V_channel),
    .if_dout(src_cols_V_channel_dout),
    .if_empty_n(src_cols_V_channel_empty_n),
    .if_read(AXIvideo2Mat_U0_ap_ready)
);

fifo_w8_d2_A src_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(src_data_stream_0_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(src_data_stream_0_V_dout),
    .if_empty_n(src_data_stream_0_V_empty_n),
    .if_read(Loop_L_row_proc36_U0_src_data_stream_0_V_read)
);

fifo_w8_d2_A src_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(src_data_stream_1_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(src_data_stream_1_V_dout),
    .if_empty_n(src_data_stream_1_V_empty_n),
    .if_read(Loop_L_row_proc36_U0_src_data_stream_1_V_read)
);

fifo_w8_d2_A src_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(src_data_stream_2_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(src_data_stream_2_V_dout),
    .if_empty_n(src_data_stream_2_V_empty_n),
    .if_read(Loop_L_row_proc36_U0_src_data_stream_2_V_read)
);

fifo_w8_d2_A dst_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_L_row_proc36_U0_dst_data_stream_0_V_din),
    .if_full_n(dst_data_stream_0_V_full_n),
    .if_write(Loop_L_row_proc36_U0_dst_data_stream_0_V_write),
    .if_dout(dst_data_stream_0_V_dout),
    .if_empty_n(dst_data_stream_0_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A dst_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_L_row_proc36_U0_dst_data_stream_1_V_din),
    .if_full_n(dst_data_stream_1_V_full_n),
    .if_write(Loop_L_row_proc36_U0_dst_data_stream_1_V_write),
    .if_dout(dst_data_stream_1_V_dout),
    .if_empty_n(dst_data_stream_1_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A dst_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_L_row_proc36_U0_dst_data_stream_2_V_din),
    .if_full_n(dst_data_stream_2_V_full_n),
    .if_write(Loop_L_row_proc36_U0_dst_data_stream_2_V_write),
    .if_dout(dst_data_stream_2_V_dout),
    .if_empty_n(dst_data_stream_2_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

start_for_Loop_L_bkb start_for_Loop_L_bkb_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Loop_L_row_proc36_U0_din),
    .if_full_n(start_for_Loop_L_row_proc36_U0_full_n),
    .if_write(Block_Mat_exit665_pr_U0_start_write),
    .if_dout(start_for_Loop_L_row_proc36_U0_dout),
    .if_empty_n(start_for_Loop_L_row_proc36_U0_empty_n),
    .if_read(Loop_L_row_proc36_U0_ap_ready)
);

start_for_Mat2AXIcud start_for_Mat2AXIcud_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(Block_Mat_exit665_pr_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready <= ap_sync_Block_Mat_exit665_pr_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_cols_V_channel <= 1'b0;
    end else begin
        if (((Block_Mat_exit665_pr_U0_ap_done & Block_Mat_exit665_pr_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_src_cols_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_cols_V_channel <= ap_sync_channel_write_src_cols_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_rows_V_channel <= 1'b0;
    end else begin
        if (((Block_Mat_exit665_pr_U0_ap_done & Block_Mat_exit665_pr_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_src_rows_V_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_rows_V_channel <= ap_sync_channel_write_src_rows_V_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_Mat_exit665_pr_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_Mat_exit665_pr_U0_ap_ready_count <= (Block_Mat_exit665_pr_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Block_Mat_exit665_pr_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Block_Mat_exit665_pr_U0_ap_ready_count <= (Block_Mat_exit665_pr_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = (src_rows_V_channel_empty_n & src_cols_V_channel_empty_n & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign AXIvideo2Mat_U0_start_full_n = 1'b1;

assign AXIvideo2Mat_U0_start_write = 1'b0;

assign Block_Mat_exit665_pr_U0_ap_continue = (ap_sync_channel_write_src_rows_V_channel & ap_sync_channel_write_src_cols_V_channel);

assign Block_Mat_exit665_pr_U0_ap_start = ((ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit665_pr_U0_start_full_n = (start_for_Mat2AXIvideo_U0_full_n & start_for_Loop_L_row_proc36_U0_full_n);

assign Loop_L_row_proc36_U0_ap_continue = 1'b1;

assign Loop_L_row_proc36_U0_ap_start = start_for_Loop_L_row_proc36_U0_empty_n;

assign Loop_L_row_proc36_U0_start_full_n = 1'b1;

assign Loop_L_row_proc36_U0_start_write = 1'b0;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign ap_channel_done_src_cols_V_channel = ((ap_sync_reg_channel_write_src_cols_V_channel ^ 1'b1) & Block_Mat_exit665_pr_U0_ap_done);

assign ap_channel_done_src_rows_V_channel = ((ap_sync_reg_channel_write_src_rows_V_channel ^ 1'b1) & Block_Mat_exit665_pr_U0_ap_done);

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = ((src_cols_V_channel_empty_n ^ 1'b1) & (src_rows_V_channel_empty_n ^ 1'b1) & Mat2AXIvideo_U0_ap_idle & Loop_L_row_proc36_U0_ap_idle & Block_Mat_exit665_pr_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_Block_Mat_exit665_pr_U0_ap_ready = (ap_sync_reg_Block_Mat_exit665_pr_U0_ap_ready | Block_Mat_exit665_pr_U0_ap_ready);

assign ap_sync_channel_write_src_cols_V_channel = ((src_cols_V_channel_full_n & ap_channel_done_src_cols_V_channel) | ap_sync_reg_channel_write_src_cols_V_channel);

assign ap_sync_channel_write_src_rows_V_channel = ((src_rows_V_channel_full_n & ap_channel_done_src_rows_V_channel) | ap_sync_reg_channel_write_src_rows_V_channel);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_Mat_exit665_pr_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign in_r_TREADY = AXIvideo2Mat_U0_in_r_TREADY;

assign out_r_TDATA = Mat2AXIvideo_U0_out_r_TDATA;

assign out_r_TDEST = Mat2AXIvideo_U0_out_r_TDEST;

assign out_r_TID = Mat2AXIvideo_U0_out_r_TID;

assign out_r_TKEEP = Mat2AXIvideo_U0_out_r_TKEEP;

assign out_r_TLAST = Mat2AXIvideo_U0_out_r_TLAST;

assign out_r_TSTRB = Mat2AXIvideo_U0_out_r_TSTRB;

assign out_r_TUSER = Mat2AXIvideo_U0_out_r_TUSER;

assign out_r_TVALID = Mat2AXIvideo_U0_out_r_TVALID;

assign start_for_Loop_L_row_proc36_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

endmodule //subsample
