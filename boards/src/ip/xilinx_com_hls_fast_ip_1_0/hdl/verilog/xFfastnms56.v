// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFfastnms56 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_dst_V_V_dout,
        p_dst_V_V_empty_n,
        p_dst_V_V_read,
        p_strm_out_V_V_din,
        p_strm_out_V_V_full_n,
        p_strm_out_V_V_write,
        p_image_height_dout,
        p_image_height_empty_n,
        p_image_height_read,
        p_image_width_dout,
        p_image_width_empty_n,
        p_image_width_read
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_pp0_stage0 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_pp1_stage0 = 10'd256;
parameter    ap_ST_fsm_state15 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_dst_V_V_dout;
input   p_dst_V_V_empty_n;
output   p_dst_V_V_read;
output  [7:0] p_strm_out_V_V_din;
input   p_strm_out_V_V_full_n;
output   p_strm_out_V_V_write;
input  [15:0] p_image_height_dout;
input   p_image_height_empty_n;
output   p_image_height_read;
input  [15:0] p_image_width_dout;
input   p_image_width_empty_n;
output   p_image_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_dst_V_V_read;
reg p_strm_out_V_V_write;
reg p_image_height_read;
reg p_image_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_dst_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_reg_1168;
reg   [0:0] or_cond_i_i_i_reg_1184;
reg    p_strm_out_V_V_blk_n;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] tmp_46_i_i_reg_1210;
reg   [0:0] tmp_46_i_i_reg_1210_pp1_iter3_reg;
reg    p_image_height_blk_n;
reg    p_image_width_blk_n;
reg   [10:0] p_i_i_reg_286;
reg   [7:0] src_buf_1_1_i_i_reg_354;
reg   [7:0] src_buf_1_0_i_i_reg_366;
reg   [7:0] src_buf_0_1_i_i_reg_378;
reg   [7:0] src_buf_0_0_i_i_reg_390;
reg   [7:0] src_buf_2_0_i_i_reg_402;
reg   [7:0] src_buf_2_1_i_i_reg_414;
reg   [11:0] p_0285_0_i_i_i_reg_426;
reg   [11:0] p_0285_0_i_i_i_reg_426_pp1_iter1_reg;
wire    ap_block_state10_pp1_stage0_iter0;
reg    ap_predicate_op166_read_state11;
reg    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
reg    ap_block_state14_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
wire   [10:0] tmp_11_fu_438_p1;
reg   [10:0] tmp_11_reg_1000;
reg    ap_block_state1;
wire   [10:0] tmp_12_fu_442_p1;
reg   [10:0] tmp_12_reg_1005;
reg   [12:0] row_ind_2_V_1_load_reg_1012;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_2_V_2_load_reg_1017;
reg   [12:0] row_ind_2_V_load_reg_1023;
wire   [1:0] init_row_ind_fu_461_p2;
wire   [31:0] init_buf_fu_494_p1;
wire   [0:0] exitcond1_i_i_fu_455_p2;
wire   [11:0] op2_assign_cast_cast_fu_498_p1;
reg   [11:0] op2_assign_cast_cast_reg_1041;
wire   [31:0] tmp_9_i_i_fu_501_p1;
reg   [31:0] tmp_9_i_i_reg_1047;
wire   [0:0] tmp_i_i_9_fu_505_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_13_fu_510_p1;
reg   [1:0] tmp_13_reg_1056;
wire   [1:0] tmp_14_fu_514_p1;
reg   [1:0] tmp_14_reg_1060;
wire   [0:0] exitcond3_fu_517_p2;
reg   [0:0] exitcond3_reg_1065;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] col_V_1_fu_522_p2;
reg   [10:0] col_V_1_reg_1069;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] init_buf_1_fu_535_p2;
wire    ap_CS_fsm_state6;
wire   [10:0] col_V_fu_546_p2;
reg   [10:0] col_V_reg_1082;
wire    ap_CS_fsm_state7;
reg   [10:0] buf_0_V_addr_1_reg_1087;
wire   [0:0] exitcond2_fu_541_p2;
wire   [11:0] tmp_3_fu_559_p2;
reg   [11:0] tmp_3_reg_1103;
wire   [11:0] tmp_5_fu_564_p1;
reg   [11:0] tmp_5_reg_1108;
wire   [11:0] tmp_6_fu_567_p2;
reg   [11:0] tmp_6_reg_1113;
wire  signed [12:0] op2_assign_cast_fu_579_p1;
reg  signed [12:0] op2_assign_cast_reg_1118;
wire   [0:0] exitcond1_fu_599_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_18_i_i_fu_604_p2;
reg   [0:0] tmp_18_i_i_reg_1128;
wire   [1:0] tmp_16_fu_629_p1;
reg   [1:0] tmp_16_reg_1133;
wire   [0:0] or_cond_i_i_fu_641_p2;
reg   [0:0] or_cond_i_i_reg_1138;
wire   [0:0] or_cond1_i_i_fu_653_p2;
reg   [0:0] or_cond1_i_i_reg_1143;
wire   [0:0] or_cond2_i_i_fu_665_p2;
reg   [0:0] or_cond2_i_i_reg_1148;
wire   [1:0] tmp_18_fu_671_p1;
reg   [1:0] tmp_18_reg_1153;
wire   [1:0] tmp_19_fu_675_p1;
reg   [1:0] tmp_19_reg_1158;
wire   [1:0] tmp_20_fu_679_p1;
reg   [1:0] tmp_20_reg_1163;
wire   [0:0] exitcond_fu_683_p2;
reg   [0:0] exitcond_reg_1168_pp1_iter1_reg;
reg   [0:0] exitcond_reg_1168_pp1_iter2_reg;
reg   [0:0] exitcond_reg_1168_pp1_iter3_reg;
wire   [11:0] col_V_2_fu_688_p2;
reg   [11:0] col_V_2_reg_1172;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_23_i_i_fu_694_p2;
reg   [0:0] tmp_23_i_i_reg_1177;
reg   [0:0] tmp_23_i_i_reg_1177_pp1_iter1_reg;
reg   [0:0] tmp_23_i_i_reg_1177_pp1_iter2_reg;
wire   [0:0] or_cond_i_i_i_fu_699_p2;
wire   [1:0] tmp_21_fu_715_p1;
reg   [1:0] tmp_21_reg_1188;
reg   [1:0] tmp_21_reg_1188_pp1_iter1_reg;
reg   [1:0] tmp_21_reg_1188_pp1_iter2_reg;
wire   [0:0] tmp_46_i_i_fu_733_p2;
wire   [7:0] storemerge1_i_i_fu_826_p3;
reg   [7:0] storemerge1_i_i_reg_1217;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] storemerge2_i_i_fu_833_p3;
reg   [7:0] storemerge2_i_i_reg_1222;
wire   [7:0] storemerge3_i_i_fu_840_p3;
reg   [7:0] storemerge3_i_i_reg_1227;
wire   [0:0] tmp_36_i_i_fu_847_p2;
reg   [0:0] tmp_36_i_i_reg_1232;
wire   [0:0] tmp_37_i_i_fu_853_p2;
reg   [0:0] tmp_37_i_i_reg_1237;
wire   [0:0] tmp_38_i_i_fu_859_p2;
reg   [0:0] tmp_38_i_i_reg_1242;
wire   [0:0] tmp_40_i_i_fu_865_p2;
reg   [0:0] tmp_40_i_i_reg_1247;
wire   [0:0] tmp_41_i_i_fu_871_p2;
reg   [0:0] tmp_41_i_i_reg_1252;
wire   [0:0] tmp_42_i_i_fu_877_p2;
reg   [0:0] tmp_42_i_i_reg_1257;
wire   [0:0] tmp_43_i_i_fu_883_p2;
reg   [0:0] tmp_43_i_i_reg_1262;
wire   [0:0] tmp_44_i_i_fu_889_p2;
reg   [0:0] tmp_44_i_i_reg_1267;
wire   [0:0] not_tmp_35_i_i_fu_895_p2;
reg   [0:0] not_tmp_35_i_i_reg_1272;
wire   [7:0] storemerge_i_i_fu_901_p3;
reg   [7:0] storemerge_i_i_reg_1277;
wire   [7:0] storemerge4_i_i_fu_908_p3;
reg   [7:0] storemerge4_i_i_reg_1282;
wire   [7:0] storemerge5_i_i_fu_915_p3;
reg   [7:0] storemerge5_i_i_reg_1287;
wire   [11:0] row_V_fu_970_p2;
wire    ap_CS_fsm_state15;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter2;
reg   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
reg   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
wire   [1:0] ap_phi_mux_val_assign_phi_fu_269_p4;
reg   [1:0] val_assign_reg_265;
reg   [31:0] init_buf1_i_i_reg_276;
reg   [10:0] ap_phi_mux_p_i_i_phi_fu_290_p4;
reg   [10:0] p_0151_1_i_i_reg_298;
wire    ap_CS_fsm_state8;
reg   [12:0] row_ind_1_V_1_reg_309;
reg   [12:0] zero_ind_V_reg_330;
reg   [12:0] row_ind_0_V_reg_319;
reg   [11:0] tmp_13_i_i_reg_342;
reg   [7:0] ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4;
reg   [7:0] ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4;
reg   [7:0] ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4;
reg   [7:0] ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4;
reg   [7:0] ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4;
reg   [7:0] ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4;
reg   [11:0] ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4;
wire   [63:0] tmp_12_i_i_fu_528_p1;
wire   [63:0] tmp_7_i_i_fu_552_p1;
wire   [63:0] tmp_24_i_i_fu_719_p1;
wire   [63:0] tmp_25_i_i_fu_726_p1;
reg    ap_block_pp1_stage0_01001;
reg   [12:0] row_ind_2_V_1_fu_98;
wire   [12:0] row_ind_0_V_1_fu_467_p1;
reg   [12:0] row_ind_2_V_2_fu_102;
reg   [12:0] row_ind_2_V_fu_106;
reg   [12:0] row_ind_2_V_3_fu_110;
wire   [7:0] tmp_1_fu_583_p5;
wire   [11:0] op2_assign_fu_573_p2;
wire   [12:0] tmp_13_i_i_cast_fu_595_p1;
wire   [12:0] r_V_fu_614_p2;
wire   [12:0] r_V_1_fu_619_p2;
wire   [0:0] tmp_19_i_i_fu_609_p2;
wire   [0:0] tmp_17_fu_633_p3;
wire   [11:0] tmp_15_fu_625_p1;
wire   [0:0] tmp_39_1_i_i_fu_647_p2;
wire   [0:0] tmp_39_2_i_i_fu_659_p2;
wire   [12:0] tmp_4_fu_704_p5;
wire   [7:0] tmp_7_fu_739_p5;
wire   [7:0] tmp_8_fu_750_p5;
wire   [7:0] tmp_9_fu_768_p5;
wire   [7:0] tmp_s_fu_779_p5;
wire   [7:0] tmp_2_fu_797_p5;
wire   [7:0] tmp_10_fu_808_p5;
wire   [7:0] buf_cop_0_V_fu_761_p3;
wire   [7:0] buf_cop_1_V_fu_790_p3;
wire   [7:0] buf_cop_2_V_fu_819_p3;
wire   [0:0] tmp4_fu_926_p2;
wire   [0:0] tmp3_fu_922_p2;
wire   [0:0] tmp8_fu_940_p2;
wire   [0:0] tmp7_fu_944_p2;
wire   [0:0] tmp6_fu_936_p2;
wire   [0:0] tmp5_fu_949_p2;
wire   [0:0] tmp_fu_930_p2;
wire   [0:0] tmp_V_2_fu_955_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

xFfast7x755_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xFfast7x755_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(p_dst_V_V_dout)
);

xFfast7x755_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(p_dst_V_V_dout)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U58(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_14_reg_1060),
    .dout(tmp_1_fu_583_p5)
);

fast_ip_mux_32_13eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
fast_ip_mux_32_13eOg_U59(
    .din0(zero_ind_V_reg_330),
    .din1(row_ind_0_V_reg_319),
    .din2(row_ind_1_V_1_reg_309),
    .din3(tmp_16_reg_1133),
    .dout(tmp_4_fu_704_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U60(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_21_reg_1188_pp1_iter2_reg),
    .dout(tmp_7_fu_739_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U61(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_19_reg_1158),
    .dout(tmp_8_fu_750_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U62(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_21_reg_1188_pp1_iter2_reg),
    .dout(tmp_9_fu_768_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U63(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_20_reg_1163),
    .dout(tmp_s_fu_779_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U64(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_21_reg_1188_pp1_iter2_reg),
    .dout(tmp_2_fu_797_p5)
);

fast_ip_mux_32_8_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
fast_ip_mux_32_8_dEe_U65(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(tmp_18_reg_1153),
    .dout(tmp_10_fu_808_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i_i_9_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_i_i_9_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state10))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        init_buf1_i_i_reg_276 <= init_buf_1_fu_535_p2;
    end else if (((exitcond1_i_i_fu_455_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        init_buf1_i_i_reg_276 <= init_buf_fu_494_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_9_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_0151_1_i_i_reg_298 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_0151_1_i_i_reg_298 <= col_V_reg_1082;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_0285_0_i_i_i_reg_426 <= col_V_2_reg_1172;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        p_0285_0_i_i_i_reg_426 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1065 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_i_i_reg_286 <= col_V_1_reg_1069;
    end else if (((tmp_i_i_9_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_i_i_reg_286 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        row_ind_0_V_reg_319 <= row_ind_1_V_1_reg_309;
    end else if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_0_V_reg_319 <= row_ind_2_V_2_load_reg_1017;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        row_ind_1_V_1_reg_309 <= zero_ind_V_reg_330;
    end else if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        row_ind_1_V_1_reg_309 <= row_ind_2_V_load_reg_1023;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_0_0_i_i_reg_390 <= storemerge_i_i_reg_1277;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_0_0_i_i_reg_390 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_0_1_i_i_reg_378 <= storemerge1_i_i_reg_1217;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_0_1_i_i_reg_378 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_0_i_i_reg_366 <= storemerge4_i_i_reg_1282;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_0_i_i_reg_366 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_1_1_i_i_reg_354 <= storemerge2_i_i_reg_1222;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_1_1_i_i_reg_354 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_0_i_i_reg_402 <= storemerge5_i_i_reg_1287;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_0_i_i_reg_402 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf_2_1_i_i_reg_414 <= storemerge3_i_i_reg_1227;
    end else if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        src_buf_2_1_i_i_reg_414 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_13_i_i_reg_342 <= row_V_fu_970_p2;
    end else if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_13_i_i_reg_342 <= 12'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_455_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        val_assign_reg_265 <= init_row_ind_fu_461_p2;
    end else if ((~((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        val_assign_reg_265 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        zero_ind_V_reg_330 <= row_ind_0_V_reg_319;
    end else if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        zero_ind_V_reg_330 <= row_ind_2_V_1_load_reg_1012;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_541_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_0_V_addr_1_reg_1087 <= tmp_7_i_i_fu_552_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_V_1_reg_1069 <= col_V_1_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_V_2_reg_1172 <= col_V_2_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        col_V_reg_1082 <= col_V_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond3_reg_1065 <= exitcond3_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_reg_1168 <= exitcond_fu_683_p2;
        exitcond_reg_1168_pp1_iter1_reg <= exitcond_reg_1168;
        p_0285_0_i_i_i_reg_426_pp1_iter1_reg <= p_0285_0_i_i_i_reg_426;
        tmp_21_reg_1188_pp1_iter1_reg <= tmp_21_reg_1188;
        tmp_23_i_i_reg_1177_pp1_iter1_reg <= tmp_23_i_i_reg_1177;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_reg_1168_pp1_iter2_reg <= exitcond_reg_1168_pp1_iter1_reg;
        exitcond_reg_1168_pp1_iter3_reg <= exitcond_reg_1168_pp1_iter2_reg;
        tmp_21_reg_1188_pp1_iter2_reg <= tmp_21_reg_1188_pp1_iter1_reg;
        tmp_23_i_i_reg_1177_pp1_iter2_reg <= tmp_23_i_i_reg_1177_pp1_iter1_reg;
        tmp_46_i_i_reg_1210_pp1_iter3_reg <= tmp_46_i_i_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        not_tmp_35_i_i_reg_1272 <= not_tmp_35_i_i_fu_895_p2;
        tmp_36_i_i_reg_1232 <= tmp_36_i_i_fu_847_p2;
        tmp_37_i_i_reg_1237 <= tmp_37_i_i_fu_853_p2;
        tmp_38_i_i_reg_1242 <= tmp_38_i_i_fu_859_p2;
        tmp_40_i_i_reg_1247 <= tmp_40_i_i_fu_865_p2;
        tmp_41_i_i_reg_1252 <= tmp_41_i_i_fu_871_p2;
        tmp_42_i_i_reg_1257 <= tmp_42_i_i_fu_877_p2;
        tmp_43_i_i_reg_1262 <= tmp_43_i_i_fu_883_p2;
        tmp_44_i_i_reg_1267 <= tmp_44_i_i_fu_889_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_455_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        op2_assign_cast_cast_reg_1041[10 : 0] <= op2_assign_cast_cast_fu_498_p1[10 : 0];
        tmp_9_i_i_reg_1047[1 : 0] <= tmp_9_i_i_fu_501_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        op2_assign_cast_reg_1118 <= op2_assign_cast_fu_579_p1;
        tmp_3_reg_1103 <= tmp_3_fu_559_p2;
        tmp_5_reg_1108[10 : 0] <= tmp_5_fu_564_p1[10 : 0];
        tmp_6_reg_1113 <= tmp_6_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_599_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        or_cond1_i_i_reg_1143 <= or_cond1_i_i_fu_653_p2;
        or_cond2_i_i_reg_1148 <= or_cond2_i_i_fu_665_p2;
        or_cond_i_i_reg_1138 <= or_cond_i_i_fu_641_p2;
        tmp_16_reg_1133 <= tmp_16_fu_629_p1;
        tmp_18_i_i_reg_1128 <= tmp_18_i_i_fu_604_p2;
        tmp_18_reg_1153 <= tmp_18_fu_671_p1;
        tmp_19_reg_1158 <= tmp_19_fu_675_p1;
        tmp_20_reg_1163 <= tmp_20_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_683_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        or_cond_i_i_i_reg_1184 <= or_cond_i_i_i_fu_699_p2;
        tmp_21_reg_1188 <= tmp_21_fu_715_p1;
        tmp_23_i_i_reg_1177 <= tmp_23_i_i_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_455_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_269_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_2_V_1_fu_98[1 : 0] <= row_ind_0_V_1_fu_467_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_2_V_1_load_reg_1012[1 : 0] <= row_ind_2_V_1_fu_98[1 : 0];
        row_ind_2_V_2_load_reg_1017[1 : 0] <= row_ind_2_V_2_fu_102[1 : 0];
        row_ind_2_V_load_reg_1023[1 : 0] <= row_ind_2_V_fu_106[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_i_fu_455_p2 == 1'd0) & (ap_phi_mux_val_assign_phi_fu_269_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_2_V_2_fu_102[1 : 0] <= row_ind_0_V_1_fu_467_p1[1 : 0];
        row_ind_2_V_3_fu_110[1 : 0] <= row_ind_0_V_1_fu_467_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_val_assign_phi_fu_269_p4 == 2'd1) & ~(ap_phi_mux_val_assign_phi_fu_269_p4 == 2'd0) & (exitcond1_i_i_fu_455_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_2_V_fu_106[1 : 0] <= row_ind_0_V_1_fu_467_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        storemerge1_i_i_reg_1217 <= storemerge1_i_i_fu_826_p3;
        storemerge2_i_i_reg_1222 <= storemerge2_i_i_fu_833_p3;
        storemerge3_i_i_reg_1227 <= storemerge3_i_i_fu_840_p3;
        storemerge4_i_i_reg_1282 <= storemerge4_i_i_fu_908_p3;
        storemerge5_i_i_reg_1287 <= storemerge5_i_i_fu_915_p3;
        storemerge_i_i_reg_1277 <= storemerge_i_i_fu_901_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_11_reg_1000 <= tmp_11_fu_438_p1;
        tmp_12_reg_1005 <= tmp_12_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_9_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_13_reg_1056 <= tmp_13_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_9_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_14_reg_1060 <= tmp_14_fu_514_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1168_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_46_i_i_reg_1210 <= tmp_46_i_i_fu_733_p2;
    end
end

always @ (*) begin
    if ((exitcond3_fu_517_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_683_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 = col_V_2_reg_1172;
    end else begin
        ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 = p_0285_0_i_i_i_reg_426;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1065 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_i_i_phi_fu_290_p4 = col_V_1_reg_1069;
    end else begin
        ap_phi_mux_p_i_i_phi_fu_290_p4 = p_i_i_reg_286;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4 = storemerge_i_i_reg_1277;
    end else begin
        ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4 = src_buf_0_0_i_i_reg_390;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4 = storemerge1_i_i_reg_1217;
    end else begin
        ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4 = src_buf_0_1_i_i_reg_378;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4 = storemerge4_i_i_reg_1282;
    end else begin
        ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4 = src_buf_1_0_i_i_reg_366;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 = storemerge2_i_i_reg_1222;
    end else begin
        ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 = src_buf_1_1_i_i_reg_354;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4 = storemerge5_i_i_reg_1287;
    end else begin
        ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4 = src_buf_2_0_i_i_reg_402;
    end
end

always @ (*) begin
    if (((exitcond_reg_1168_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4 = storemerge3_i_i_reg_1227;
    end else begin
        ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4 = src_buf_2_1_i_i_reg_414;
    end
end

always @ (*) begin
    if (((exitcond1_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_address0 = tmp_25_i_i_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_V_address0 = tmp_7_i_i_fu_552_p1;
    end else begin
        buf_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_address1 = tmp_24_i_i_fu_719_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        buf_0_V_address1 = buf_0_V_addr_1_reg_1087;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_0_V_address1 = tmp_12_i_i_fu_528_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        buf_0_V_d1 = tmp_1_fu_583_p5;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_0_V_d1 = p_dst_V_V_dout;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((or_cond_i_i_i_reg_1184 == 1'd1) & (exitcond_reg_1168 == 1'd0) & (tmp_18_reg_1153 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_13_reg_1056 == 2'd0)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_address0 = tmp_25_i_i_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_V_address0 = tmp_7_i_i_fu_552_p1;
    end else begin
        buf_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_1_V_address1 = tmp_24_i_i_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = tmp_12_i_i_fu_528_p1;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_i_reg_1184 == 1'd1) & (exitcond_reg_1168 == 1'd0) & (tmp_18_reg_1153 == 2'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_13_reg_1056 == 2'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_2_V_address0 = tmp_25_i_i_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2_V_address0 = tmp_7_i_i_fu_552_p1;
    end else begin
        buf_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2_V_address1 = tmp_24_i_i_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_V_address1 = tmp_12_i_i_fu_528_p1;
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(tmp_18_reg_1153 == 2'd0) & ~(tmp_18_reg_1153 == 2'd1) & (or_cond_i_i_i_reg_1184 == 1'd1) & (exitcond_reg_1168 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | (~(tmp_13_reg_1056 == 2'd0) & ~(tmp_13_reg_1056 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_i_reg_1184 == 1'd1) & (exitcond_reg_1168 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_dst_V_V_blk_n = p_dst_V_V_empty_n;
    end else begin
        p_dst_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op166_read_state11 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_dst_V_V_read = 1'b1;
    end else begin
        p_dst_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_image_height_blk_n = p_image_height_empty_n;
    end else begin
        p_image_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_image_height_read = 1'b1;
    end else begin
        p_image_height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_image_width_blk_n = p_image_width_empty_n;
    end else begin
        p_image_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_image_width_read = 1'b1;
    end else begin
        p_image_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        p_strm_out_V_V_blk_n = p_strm_out_V_V_full_n;
    end else begin
        p_strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_strm_out_V_V_write = 1'b1;
    end else begin
        p_strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_i_i_fu_455_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_i_i_9_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond3_fu_517_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond3_fu_517_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond2_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond1_fu_599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((exitcond_fu_683_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((exitcond_fu_683_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((p_dst_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((p_dst_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (p_strm_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((p_dst_V_V_empty_n == 1'b0) & (ap_predicate_op166_read_state11 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (p_strm_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((p_dst_V_V_empty_n == 1'b0) & (ap_predicate_op166_read_state11 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (p_strm_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((p_dst_V_V_empty_n == 1'b0) & (ap_predicate_op166_read_state11 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((p_image_width_empty_n == 1'b0) | (p_image_height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter1 = ((p_dst_V_V_empty_n == 1'b0) & (ap_predicate_op166_read_state11 == 1'b1));
end

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp1_stage0_iter4 = ((tmp_46_i_i_reg_1210_pp1_iter3_reg == 1'd0) & (p_strm_out_V_V_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (p_dst_V_V_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_val_assign_phi_fu_269_p4 = val_assign_reg_265;

always @ (*) begin
    ap_predicate_op166_read_state11 = ((or_cond_i_i_i_reg_1184 == 1'd1) & (exitcond_reg_1168 == 1'd0));
end

assign buf_cop_0_V_fu_761_p3 = ((or_cond_i_i_reg_1138[0:0] === 1'b1) ? tmp_7_fu_739_p5 : tmp_8_fu_750_p5);

assign buf_cop_1_V_fu_790_p3 = ((or_cond1_i_i_reg_1143[0:0] === 1'b1) ? tmp_9_fu_768_p5 : tmp_s_fu_779_p5);

assign buf_cop_2_V_fu_819_p3 = ((or_cond2_i_i_reg_1148[0:0] === 1'b1) ? tmp_2_fu_797_p5 : tmp_10_fu_808_p5);

assign col_V_1_fu_522_p2 = (ap_phi_mux_p_i_i_phi_fu_290_p4 + 11'd1);

assign col_V_2_fu_688_p2 = (ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 + 12'd1);

assign col_V_fu_546_p2 = (p_0151_1_i_i_reg_298 + 11'd1);

assign exitcond1_fu_599_p2 = ((tmp_13_i_i_reg_342 == tmp_6_reg_1113) ? 1'b1 : 1'b0);

assign exitcond1_i_i_fu_455_p2 = ((val_assign_reg_265 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_fu_541_p2 = ((p_0151_1_i_i_reg_298 == tmp_12_reg_1005) ? 1'b1 : 1'b0);

assign exitcond3_fu_517_p2 = ((ap_phi_mux_p_i_i_phi_fu_290_p4 == tmp_12_reg_1005) ? 1'b1 : 1'b0);

assign exitcond_fu_683_p2 = ((ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 == tmp_3_reg_1103) ? 1'b1 : 1'b0);

assign init_buf_1_fu_535_p2 = (init_buf1_i_i_reg_276 + 32'd1);

assign init_buf_fu_494_p1 = row_ind_2_V_3_fu_110;

assign init_row_ind_fu_461_p2 = (val_assign_reg_265 + 2'd1);

assign not_tmp_35_i_i_fu_895_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 != 8'd0) ? 1'b1 : 1'b0);

assign op2_assign_cast_cast_fu_498_p1 = tmp_12_reg_1005;

assign op2_assign_cast_fu_579_p1 = $signed(op2_assign_fu_573_p2);

assign op2_assign_fu_573_p2 = ($signed(tmp_5_fu_564_p1) + $signed(12'd4095));

assign or_cond1_i_i_fu_653_p2 = (tmp_39_1_i_i_fu_647_p2 & tmp_19_i_i_fu_609_p2);

assign or_cond2_i_i_fu_665_p2 = (tmp_39_2_i_i_fu_659_p2 & tmp_19_i_i_fu_609_p2);

assign or_cond_i_i_fu_641_p2 = (tmp_19_i_i_fu_609_p2 & tmp_17_fu_633_p3);

assign or_cond_i_i_i_fu_699_p2 = (tmp_23_i_i_fu_694_p2 & tmp_18_i_i_reg_1128);

assign p_strm_out_V_V_din = ((tmp_V_2_fu_955_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign r_V_1_fu_619_p2 = (13'd2 - r_V_fu_614_p2);

assign r_V_fu_614_p2 = ($signed(tmp_13_i_i_cast_fu_595_p1) - $signed(op2_assign_cast_reg_1118));

assign row_V_fu_970_p2 = (tmp_13_i_i_reg_342 + 12'd1);

assign row_ind_0_V_1_fu_467_p1 = val_assign_reg_265;

assign storemerge1_i_i_fu_826_p3 = ((tmp_23_i_i_reg_1177_pp1_iter2_reg[0:0] === 1'b1) ? buf_cop_0_V_fu_761_p3 : ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4);

assign storemerge2_i_i_fu_833_p3 = ((tmp_23_i_i_reg_1177_pp1_iter2_reg[0:0] === 1'b1) ? buf_cop_1_V_fu_790_p3 : ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4);

assign storemerge3_i_i_fu_840_p3 = ((tmp_23_i_i_reg_1177_pp1_iter2_reg[0:0] === 1'b1) ? buf_cop_2_V_fu_819_p3 : ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4);

assign storemerge4_i_i_fu_908_p3 = ((tmp_46_i_i_reg_1210[0:0] === 1'b1) ? storemerge2_i_i_fu_833_p3 : ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4);

assign storemerge5_i_i_fu_915_p3 = ((tmp_46_i_i_reg_1210[0:0] === 1'b1) ? storemerge3_i_i_fu_840_p3 : ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4);

assign storemerge_i_i_fu_901_p3 = ((tmp_46_i_i_reg_1210[0:0] === 1'b1) ? storemerge1_i_i_fu_826_p3 : ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4);

assign tmp3_fu_922_p2 = (tmp_37_i_i_reg_1237 & tmp_36_i_i_reg_1232);

assign tmp4_fu_926_p2 = (tmp_40_i_i_reg_1247 & tmp_38_i_i_reg_1242);

assign tmp5_fu_949_p2 = (tmp7_fu_944_p2 & tmp6_fu_936_p2);

assign tmp6_fu_936_p2 = (tmp_42_i_i_reg_1257 & tmp_41_i_i_reg_1252);

assign tmp7_fu_944_p2 = (tmp_43_i_i_reg_1262 & tmp8_fu_940_p2);

assign tmp8_fu_940_p2 = (tmp_44_i_i_reg_1267 & not_tmp_35_i_i_reg_1272);

assign tmp_11_fu_438_p1 = p_image_height_dout[10:0];

assign tmp_12_fu_442_p1 = p_image_width_dout[10:0];

assign tmp_12_i_i_fu_528_p1 = p_i_i_reg_286;

assign tmp_13_fu_510_p1 = init_buf1_i_i_reg_276[1:0];

assign tmp_13_i_i_cast_fu_595_p1 = tmp_13_i_i_reg_342;

assign tmp_14_fu_514_p1 = row_ind_2_V_2_load_reg_1017[1:0];

assign tmp_15_fu_625_p1 = r_V_1_fu_619_p2[11:0];

assign tmp_16_fu_629_p1 = r_V_1_fu_619_p2[1:0];

assign tmp_17_fu_633_p3 = r_V_1_fu_619_p2[32'd11];

assign tmp_18_fu_671_p1 = row_ind_1_V_1_reg_309[1:0];

assign tmp_18_i_i_fu_604_p2 = ((tmp_13_i_i_reg_342 < tmp_5_reg_1108) ? 1'b1 : 1'b0);

assign tmp_19_fu_675_p1 = zero_ind_V_reg_330[1:0];

assign tmp_19_i_i_fu_609_p2 = (($signed(tmp_13_i_i_cast_fu_595_p1) > $signed(op2_assign_cast_reg_1118)) ? 1'b1 : 1'b0);

assign tmp_20_fu_679_p1 = row_ind_0_V_reg_319[1:0];

assign tmp_21_fu_715_p1 = tmp_4_fu_704_p5[1:0];

assign tmp_23_i_i_fu_694_p2 = ((ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 < op2_assign_cast_cast_reg_1041) ? 1'b1 : 1'b0);

assign tmp_24_i_i_fu_719_p1 = p_0285_0_i_i_i_reg_426;

assign tmp_25_i_i_fu_726_p1 = p_0285_0_i_i_i_reg_426_pp1_iter1_reg;

assign tmp_36_i_i_fu_847_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4) ? 1'b1 : 1'b0);

assign tmp_37_i_i_fu_853_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > storemerge2_i_i_fu_833_p3) ? 1'b1 : 1'b0);

assign tmp_38_i_i_fu_859_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4) ? 1'b1 : 1'b0);

assign tmp_39_1_i_i_fu_647_p2 = (($signed(tmp_15_fu_625_p1) < $signed(12'd1)) ? 1'b1 : 1'b0);

assign tmp_39_2_i_i_fu_659_p2 = (($signed(r_V_fu_614_p2) > $signed(13'd0)) ? 1'b1 : 1'b0);

assign tmp_3_fu_559_p2 = (op2_assign_cast_cast_reg_1041 + 12'd1);

assign tmp_40_i_i_fu_865_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4) ? 1'b1 : 1'b0);

assign tmp_41_i_i_fu_871_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > storemerge1_i_i_fu_826_p3) ? 1'b1 : 1'b0);

assign tmp_42_i_i_fu_877_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4) ? 1'b1 : 1'b0);

assign tmp_43_i_i_fu_883_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4) ? 1'b1 : 1'b0);

assign tmp_44_i_i_fu_889_p2 = ((ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 > storemerge3_i_i_fu_840_p3) ? 1'b1 : 1'b0);

assign tmp_46_i_i_fu_733_p2 = ((p_0285_0_i_i_i_reg_426_pp1_iter1_reg == 12'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_564_p1 = tmp_11_reg_1000;

assign tmp_6_fu_567_p2 = (tmp_5_fu_564_p1 + 12'd1);

assign tmp_7_i_i_fu_552_p1 = p_0151_1_i_i_reg_298;

assign tmp_9_i_i_fu_501_p1 = row_ind_2_V_fu_106;

assign tmp_V_2_fu_955_p2 = (tmp_fu_930_p2 & tmp5_fu_949_p2);

assign tmp_fu_930_p2 = (tmp4_fu_926_p2 & tmp3_fu_922_p2);

assign tmp_i_i_9_fu_505_p2 = (($signed(init_buf1_i_i_reg_276) < $signed(tmp_9_i_i_reg_1047)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    row_ind_2_V_1_load_reg_1012[12:2] <= 11'b00000000000;
    row_ind_2_V_2_load_reg_1017[12:2] <= 11'b00000000000;
    row_ind_2_V_load_reg_1023[12:2] <= 11'b00000000000;
    op2_assign_cast_cast_reg_1041[11] <= 1'b0;
    tmp_9_i_i_reg_1047[31:2] <= 30'b000000000000000000000000000000;
    tmp_5_reg_1108[11] <= 1'b0;
    row_ind_2_V_1_fu_98[12:2] <= 11'b00000000000;
    row_ind_2_V_2_fu_102[12:2] <= 11'b00000000000;
    row_ind_2_V_fu_106[12:2] <= 11'b00000000000;
    row_ind_2_V_3_fu_110[12:2] <= 11'b00000000000;
end

endmodule //xFfastnms56
